-- Each user must have a unique email address.
ALTER TABLE registration ADD UNIQUE (email);

-- adding some fields to workflow_param
alter table workflow_run_param add parent_processing_accession int;
alter table workflow_param add display_name text;
alter table workflow_param add default_value text;
alter table workflow_param_value add display_name text;
alter table workflow_param_value alter workflow_param_value_id set default nextval('workflow_param_value_workflow_param_value_id_seq');

-- adding some fields to the workflow_run table
alter table workflow_run add cmd text;
alter table workflow_run add workflow_template text;
alter table workflow add cmd text;
alter table workflow add current_working_dir text;
alter table workflow add host text;
alter table workflow add username text;
alter table workflow add workflow_template text;

-- registration
alter table registration add invitation_code text;

-- Update library_strategy to use values found in SRA v1.2.
-- Update the 'library_strategy_library_strategy_id_seq'. It will be out of sync after the import. http://stackoverflow.com/questions/244243/how-to-reset-postgres-primary-key-sequence-when-it-falls-out-of-sync
-- SELECT setval('library_strategy_library_strategy_id_seq', (SELECT MAX(library_strategy_id) FROM library_strategy)+1);
UPDATE library_strategy SET description='Random sequencing of the whole genome' WHERE name like 'WGS';
UPDATE library_strategy SET description='Random sequencing of a whole chromosome or other replicon isolated from a genome' WHERE name like 'WCS';
INSERT INTO library_strategy(library_strategy_id, "name", description) VALUES (DEFAULT,'WXS', 'Random sequencing of exonic regions selected from the genome');
INSERT INTO library_strategy(library_strategy_id, "name", description) VALUES (DEFAULT,'DNase-Hypersensitivity', 'Sequencing of hypersensitive sites, or segments of open chromatin that are more readily cleaved by DNaseI');
INSERT INTO library_strategy(library_strategy_id, "name", description) VALUES (DEFAULT,'Bisulfite-Seq', 'Sequencing following treatment of DNA with bisulfite to convert cytosine residues to uracil depending on methylation status');
INSERT INTO library_strategy(library_strategy_id, "name", description) VALUES (DEFAULT,'MRE-Seq', 'Methylation-Sensitive Restriction Enzyme Sequencing strategy');
INSERT INTO library_strategy(library_strategy_id, "name", description) VALUES (DEFAULT,'MeDIP-Seq', 'Methylated DNA Immunoprecipitation Sequencing strategy');
INSERT INTO library_strategy(library_strategy_id, "name", description) VALUES (DEFAULT,'MBD-Seq', 'Direct sequencing of methylated fractions sequencing strategy');

-- Update library_source to use values found in SRA v1.2.
-- SELECT setval('library_source_library_source_id_seq', (SELECT MAX(library_source_id) FROM library_source)+1);
UPDATE library_source SET description='Genomic DNA (includes PCR products from genomic DNA)' WHERE name like 'GENOMIC';
UPDATE library_source SET description='Transcription products or non genomic DNA (EST, cDNA, RT-PCR, screened libraries)' WHERE name like 'TRANSCRIPTOMIC';
INSERT INTO library_source(library_source_id, "name", description) VALUES (DEFAULT,'METAGENOMIC', 'Mixed material from metagenome');
UPDATE library_source SET description='Deprecated - Use TRANSCRIPTOMIC or METAGENOMIC' WHERE name like 'NON GENOMIC';
UPDATE library_source SET description='Synthetic DNA' WHERE name like 'SYNTHETIC';
UPDATE library_source SET description='Viral RNA' WHERE name like 'VIRAL RNA';
UPDATE library_source SET description='Other, unspecified, or unknown library source material' WHERE name like 'OTHER';

-- Update library_selection to use values found in SRA v1.2.
-- SELECT setval('library_selection_library_selection_id_seq', (SELECT MAX(library_selection_id) FROM library_selection)+1);
UPDATE library_selection SET description='Random selection by shearing or other method' WHERE name like 'RANDOM';
INSERT INTO library_selection(library_selection_id, "name", description) VALUES (DEFAULT,'DNAse', 'Deoxyribonuclease (MNase) digestion');
INSERT INTO library_selection(library_selection_id, "name", description) VALUES (DEFAULT,'Hybrid Selection', 'Selection by hybridization in array or solution');
INSERT INTO library_selection(library_selection_id, "name", description) VALUES (DEFAULT,'Reduced Representation', 'Reproducible genomic subsets, often generated by restriction fragment size selection, containing a manageable number of loci to facilitate re-sampling');
INSERT INTO library_selection(library_selection_id, "name", description) VALUES (DEFAULT,'Restriction Digest', 'DNA fractionation using restriction enzymes');
INSERT INTO library_selection(library_selection_id, "name", description) VALUES (DEFAULT,'5-methylcytidine antibody', 'Selection of methylated DNA fragments using an antibody raised against 5-methylcytosine or 5-methylcytidine (m5C)');
INSERT INTO library_selection(library_selection_id, "name", description) VALUES (DEFAULT,'MBD2 protein methyl-CpG binding domain', 'Enrichment by methyl-CpG binding domain');
INSERT INTO library_selection(library_selection_id, "name", description) VALUES (DEFAULT,'CAGE', 'Cap-analysis gene expression');
INSERT INTO library_selection(library_selection_id, "name", description) VALUES (DEFAULT,'RACE', 'Rapid Amplification of cDNA Ends');
INSERT INTO library_selection(library_selection_id, "name", description) VALUES (DEFAULT,'size fractionation', 'Physical selection of size appropriate targets');
UPDATE library_selection SET description='Other library enrichment, screening, or selection process' WHERE name like 'other';
UPDATE library_selection SET description='Library enrichment, screening, or selection is not specified' WHERE name like 'unspecified';

-- Add table to store sample hierarchy. 
CREATE TABLE sample_hierarchy
(
  sample_id integer REFERENCES sample (sample_id) NOT NULL,
  parent_id integer REFERENCES sample (sample_id),
  UNIQUE (sample_id, parent_id)
);
COMMENT ON TABLE sample_hierarchy IS 'Relationship of samples as they pass through the wet lab.';
ALTER TABLE sample_hierarchy OWNER TO seqware;

-- Update some fields in workflow_param table
ALTER TABLE workflow_param ALTER COLUMN type SET NOT NULL;
ALTER TABLE workflow_param ALTER COLUMN key SET NOT NULL;
ALTER TABLE workflow_param ALTER COLUMN display_name SET NOT NULL;

-- Update filed workflow_param_value table
ALTER TABLE workflow_param_value ALTER COLUMN display_name SET NOT NULL;


--
-- Name: processing_studies; Type: TABLE; Schema: public; Owner: seqware; Tablespace: 
--

CREATE TABLE processing_studies (
    processing_studies_id integer NOT NULL,
    study_id integer NOT NULL,
    processing_id integer NOT NULL,
    description text,
    label text,
    url text,
    sw_accession integer DEFAULT nextval('sw_accession_seq'::regclass)
);

ALTER TABLE public.processing_studies OWNER TO seqware;

--
-- Name: processing_studies_processing_studies_id_seq; Type: SEQUENCE; Schema: public; Owner: seqware
--

CREATE SEQUENCE processing_studies_processing_studies_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.processing_studies_processing_studies_id_seq OWNER TO seqware;

--
-- Name: processing_studies_processing_studies_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: seqware
--

ALTER SEQUENCE processing_studies_processing_studies_id_seq OWNED BY processing_studies.processing_studies_id;


--
-- Name: processing_studies_processing_studies_id_seq; Type: SEQUENCE SET; Schema: public; Owner: seqware
--

SELECT pg_catalog.setval('processing_studies_processing_studies_id_seq', 1, false);

--
-- Name: processing_studies_id; Type: DEFAULT; Schema: public; Owner: seqware
--

ALTER TABLE processing_studies ALTER COLUMN processing_studies_id SET DEFAULT nextval('processing_studies_processing_studies_id_seq'::regclass);

--
-- Name: processing_studies_pkey; Type: CONSTRAINT; Schema: public; Owner: seqware; Tablespace: 
--

ALTER TABLE ONLY processing_studies
    ADD CONSTRAINT processing_studies_pkey PRIMARY KEY (processing_studies_id);

--
-- Name: processing_studies_study_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: seqware
--

ALTER TABLE ONLY processing_studies
    ADD CONSTRAINT processing_studies_study_id_fkey FOREIGN KEY (study_id) REFERENCES study(study_id);

--
-- Name: processing_studies_processing_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: seqware
--

ALTER TABLE ONLY processing_studies
    ADD CONSTRAINT processing_studies_processing_id_fkey FOREIGN KEY (processing_id) REFERENCES processing(processing_id);

--
-- Name: study_type_name_key; Type: CONSTRAINT; Schema: public; Owner: seqware; Tablespace: 
--

ALTER TABLE ONLY processing_studies
    ADD CONSTRAINT processing_studies_unique_key UNIQUE (study_id, processing_id);
	
--
-- Name: file_type; Type: TABLE; Schema: public; Owner: seqware; Tablespace: 
--

CREATE TABLE file_type (
    file_type_id integer NOT NULL,
	display_name text,
	meta_type text, 
	extension text
);

ALTER TABLE public.file_type OWNER TO seqware;

--
-- Name: file_type_file_type_id_seq; Type: SEQUENCE; Schema: public; Owner: seqware
--

CREATE SEQUENCE file_type_file_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.file_type_file_type_id_seq OWNER TO seqware;

--
-- Name: file_type_file_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: seqware
--

ALTER SEQUENCE file_type_file_type_id_seq OWNED BY file_type.file_type_id;

--
-- Name: file_type_file_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: seqware
--

SELECT pg_catalog.setval('file_type_file_type_id_seq', 1, false);

--
-- Name: file_type_id; Type: DEFAULT; Schema: public; Owner: seqware
--

ALTER TABLE file_type ALTER COLUMN file_type_id SET DEFAULT nextval('file_type_file_type_id_seq'::regclass);

--
-- Name: file_type_pkey; Type: CONSTRAINT; Schema: public; Owner: seqware; Tablespace: 
--

ALTER TABLE ONLY file_type
    ADD CONSTRAINT file_type_pkey PRIMARY KEY (file_type_id);

-- Add some file type	
INSERT INTO file_type (display_name, meta_type, extension) VALUES('fastq file', 'chemical/seq-na-fastq','fastq');
INSERT INTO file_type (display_name, meta_type, extension) VALUES('plain text file', 'plain/text', 'txt');


--
-- Name: workflow_run_workflow_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: seqware
--

ALTER TABLE ONLY workflow_run
    ADD CONSTRAINT workflow_run_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES workflow(workflow_id);

	
--
-- Name: processing_experiments; Type: TABLE; Schema: public; Owner: seqware; Tablespace: 
--

CREATE TABLE processing_experiments (
    processing_experiments_id integer NOT NULL,
    experiment_id integer NOT NULL,
    processing_id integer NOT NULL,
    description text,
    label text,
    url text,
    sw_accession integer DEFAULT nextval('sw_accession_seq'::regclass)
);

ALTER TABLE public.processing_experiments OWNER TO seqware;

--
-- Name: processing_experiments_processing_experiments_id_seq; Type: SEQUENCE; Schema: public; Owner: seqware
--

CREATE SEQUENCE processing_experiments_processing_experiments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.processing_experiments_processing_experiments_id_seq OWNER TO seqware;

--
-- Name: processing_experiments_processing_experiments_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: seqware
--

ALTER SEQUENCE processing_experiments_processing_experiments_id_seq OWNED BY processing_experiments.processing_experiments_id;


--
-- Name: processing_experiments_processing_experiments_id_seq; Type: SEQUENCE SET; Schema: public; Owner: seqware
--

SELECT pg_catalog.setval('processing_experiments_processing_experiments_id_seq', 1, false);

--
-- Name: processing_experiments_id; Type: DEFAULT; Schema: public; Owner: seqware
--

ALTER TABLE processing_experiments ALTER COLUMN processing_experiments_id SET DEFAULT nextval('processing_experiments_processing_experiments_id_seq'::regclass);

--
-- Name: processing_experiments_pkey; Type: CONSTRAINT; Schema: public; Owner: seqware; Tablespace: 
--

ALTER TABLE ONLY processing_experiments
    ADD CONSTRAINT processing_experiments_pkey PRIMARY KEY (processing_experiments_id);

--
-- Name: processing_experiments_experiment_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: seqware
--

ALTER TABLE ONLY processing_experiments
    ADD CONSTRAINT processing_experiments_experiment_id_fkey FOREIGN KEY (experiment_id) REFERENCES experiment(experiment_id);

--
-- Name: processing_experiments_processing_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: seqware
--

ALTER TABLE ONLY processing_experiments
    ADD CONSTRAINT processing_experiments_processing_id_fkey FOREIGN KEY (processing_id) REFERENCES processing(processing_id);

--
-- Name: experiment_type_name_key; Type: CONSTRAINT; Schema: public; Owner: seqware; Tablespace: 
--

ALTER TABLE ONLY processing_experiments
    ADD CONSTRAINT processing_experiments_unique_key UNIQUE (experiment_id, processing_id);

--
-- Name: processing_samples; Type: TABLE; Schema: public; Owner: seqware; Tablespace: 
--

CREATE TABLE processing_samples (
    processing_samples_id integer NOT NULL,
    sample_id integer NOT NULL,
    processing_id integer NOT NULL,
    description text,
    label text,
    url text,
    sw_accession integer DEFAULT nextval('sw_accession_seq'::regclass)
);

ALTER TABLE public.processing_samples OWNER TO seqware;

--
-- Name: processing_samples_processing_samples_id_seq; Type: SEQUENCE; Schema: public; Owner: seqware
--

CREATE SEQUENCE processing_samples_processing_samples_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.processing_samples_processing_samples_id_seq OWNER TO seqware;

--
-- Name: processing_samples_processing_samples_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: seqware
--

ALTER SEQUENCE processing_samples_processing_samples_id_seq OWNED BY processing_samples.processing_samples_id;


--
-- Name: processing_samples_processing_samples_id_seq; Type: SEQUENCE SET; Schema: public; Owner: seqware
--

SELECT pg_catalog.setval('processing_samples_processing_samples_id_seq', 1, false);


--
-- Name: processing_samples_id; Type: DEFAULT; Schema: public; Owner: seqware
--

ALTER TABLE processing_samples ALTER COLUMN processing_samples_id SET DEFAULT nextval('processing_samples_processing_samples_id_seq'::regclass);

--
-- Name: processing_samples_pkey; Type: CONSTRAINT; Schema: public; Owner: seqware; Tablespace: 
--

ALTER TABLE ONLY processing_samples
    ADD CONSTRAINT processing_samples_pkey PRIMARY KEY (processing_samples_id);

--
-- Name: processing_samples_sample_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: seqware
--

ALTER TABLE ONLY processing_samples
    ADD CONSTRAINT processing_samples_sample_id_fkey FOREIGN KEY (sample_id) REFERENCES sample(sample_id);

--
-- Name: processing_samples_processing_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: seqware
--

ALTER TABLE ONLY processing_samples
    ADD CONSTRAINT processing_samples_processing_id_fkey FOREIGN KEY (processing_id) REFERENCES processing(processing_id);

--
-- Name: sample_type_name_key; Type: CONSTRAINT; Schema: public; Owner: seqware; Tablespace: 
--

ALTER TABLE ONLY processing_samples
    ADD CONSTRAINT processing_samples_unique_key UNIQUE (sample_id, processing_id);

-- drop FK processing_relationship_child_id_fkey
ALTER TABLE processing_relationship DROP CONSTRAINT processing_relationship_child_id_fkey;

-- create FK processing_relationship_child_id_fkey with action ON DELETE CASCADE
ALTER TABLE ONLY processing_relationship
    ADD CONSTRAINT processing_relationship_child_id_fkey FOREIGN KEY (child_id) REFERENCES processing(processing_id) ON DELETE CASCADE;

-- drop NOT NULL for field experiment_id in sample table
ALTER TABLE sample ALTER experiment_id DROP NOT NULL;

-- Add lane_attribute contraints. (These match contraints found in other attribute tables.)
ALTER TABLE lane_attribute ADD PRIMARY KEY (lane_attribute_id);
ALTER TABLE lane_attribute ADD FOREIGN KEY (lane_id) REFERENCES lane (lane_id) ON UPDATE NO ACTION ON DELETE NO ACTION;
-- Switch primary key from integer type to serial type.
ALTER TABLE lane_attribute ALTER COLUMN lane_attribute_id SET DEFAULT nextval('lane_attribute_lane_attribute_id_seq'::regclass);
