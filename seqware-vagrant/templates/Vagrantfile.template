# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  # Every Vagrant virtual environment requires a box to build off of.
  #config.vm.box = "%{BOX}"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = "%{BOX_URL}"

  config.vm.define :master do |master|

    # name it
    master.vm.box = "master"

    master.vm.provider "vmware_fusion" do |v|
      v.box = "precise64"
      v.vmx["memsize"]  = "4096"
    end
    # Provider-specific configuration so you can fine-tune various
    # backing providers for Vagrant. These expose provider-specific options.
    # Example for VirtualBox:
    #
    master.vm.provider :virtualbox do |vb|
   
      # Don't boot with headless mode
      vb.gui = true
   
      # Use VBoxManage to customize the VM. For example to change memory:
      vb.customize ["modifyvm", :id, "--memory", "4096"]
  
    end
 
    # from https://github.com/mitchellh/vagrant-aws
    master.vm.provider :aws do |aws, override|
  
      aws.tags = {
        'Name' => `whoami`.chomp + "Vagrant" 
      }
      aws.access_key_id = "%{AWS_KEY}"
      aws.secret_access_key = "%{AWS_SECRET_KEY}"
      aws.keypair_name = "%{AWS_SSH_KEY_NAME}"
      aws.user_data = File.read("user_data.txt")
      aws.ami = "%{AWS_IMAGE}"
      aws.instance_type = "%{AWS_INSTANCE_TYPE}"
      override.ssh.username = "%{AWS_SSH_USERNAME}"
      override.ssh.private_key_path = "%{AWS_SSH_PEM_FILE}"
    end

    master.vm.provider :openstack do |os, override| # e.g. BioNimbus' Sullivan cluster
        os.username = "%{OS_USER}"
        os.api_key  = "%{OS_API_KEY}"
        os.flavor   = /%{OS_INSTANCE_TYPE}/
        os.image    = /%{OS_IMAGE}/
        os.endpoint = "%{OS_ENDPOINT}"
        os.keypair_name = "%{OS_SSH_KEY_NAME}"
        os.ssh_username = "%{OS_SSH_USERNAME}"
        os.tenant = "%{OS_TENANT}"
        #os.network = "Speyside"
        #os.floating_ip = "10.0.20.213"
        override.ssh.username = "%{OS_SSH_USERNAME}"
        override.ssh.private_key_path = "%{OS_SSH_PEM_FILE}"
    end

    #master.vm.network :private_network, ip: "10.211.55.100"
    master.vm.network :forwarded_port, host: 8080, guest: 8080
    master.vm.network :forwarded_port, host: 8888, guest: 8888
    master.vm.network :forwarded_port, host: 11000, guest: 11000
    master.vm.network :forwarded_port, host: 5432, guest: 5432
    master.vm.hostname = "master"
    master.vm.provision :shell, :path => "os_server_setup.sh"
  end

  config.vm.define :worker1 do |worker1|

    # name it
    worker1.vm.box = "worker1"

    worker1.vm.provider "vmware_fusion" do |v|
      v.box = "precise64"
      v.vmx["memsize"]  = "4096"
    end
    # Provider-specific configuration so you can fine-tune various
    # backing providers for Vagrant. These expose provider-specific options.
    # Example for VirtualBox:
    #
    worker1.vm.provider :virtualbox do |vb|
   
      # Don't boot with headless mode
      vb.gui = true
   
      # Use VBoxManage to customize the VM. For example to change memory:
      vb.customize ["modifyvm", :id, "--memory", "4096"]
  
    end
 
    # from https://github.com/mitchellh/vagrant-aws
    worker1.vm.provider :aws do |aws, override|
  
      aws.tags = {
        'Name' => `whoami`.chomp + "Vagrant" 
      }
      aws.access_key_id = "%{AWS_KEY}"
      aws.secret_access_key = "%{AWS_SECRET_KEY}"
      aws.keypair_name = "%{AWS_SSH_KEY_NAME}"
      aws.user_data = File.read("user_data.txt")
      aws.ami = "%{AWS_IMAGE}"
      aws.instance_type = "%{AWS_INSTANCE_TYPE}"
      override.ssh.username = "%{AWS_SSH_USERNAME}"
      override.ssh.private_key_path = "%{AWS_SSH_PEM_FILE}"
    end

    worker1.vm.provider :openstack do |os, override| # e.g. BioNimbus' Sullivan cluster
        os.username = "%{OS_USER}"
        os.api_key  = "%{OS_API_KEY}"
        os.flavor   = /%{OS_INSTANCE_TYPE}/
        os.image    = /%{OS_IMAGE}/
        os.endpoint = "%{OS_ENDPOINT}"
        os.keypair_name = "%{OS_SSH_KEY_NAME}"
        os.ssh_username = "%{OS_SSH_USERNAME}"
        os.tenant = "%{OS_TENANT}"
        #os.network = "Speyside"
        #os.floating_ip = "10.0.20.214"
        override.ssh.username = "%{OS_SSH_USERNAME}"
        override.ssh.private_key_path = "%{OS_SSH_PEM_FILE}"
    end

    #worker1.vm.network :private_network, ip: "10.211.55.100"
    worker1.vm.network :forwarded_port, host: 8080, guest: 8080
    worker1.vm.network :forwarded_port, host: 8888, guest: 8888
    worker1.vm.network :forwarded_port, host: 11000, guest: 11000
    worker1.vm.network :forwarded_port, host: 5432, guest: 5432
    worker1.vm.hostname = "worker1"
    worker1.vm.provision :shell, :path => "os_server_setup.sh"
  end



end
