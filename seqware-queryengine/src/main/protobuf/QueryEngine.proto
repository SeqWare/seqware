import "QE_Supporting.proto";
package QueryEngine;

option java_package = "com.github.seqware.queryengine.dto";

message ACLPB{
    optional SGIDPB user = 1;
    optional SGIDPB grp = 2;
    repeated bool rights = 3;
}

message MoleculePB{
    optional ACLPB acl = 1;
    optional bool cascade = 2;
    optional int64 expiryTime = 3;
}

message FeaturePB {
    // atom/molecule stuff
    optional FeatureAtomPB atom = 1;   
    optional FeaturePB precedingVersion = 2;
    // feature specific
    optional string pragma = 10;
    optional string source = 11;
    optional string type = 12;
    optional double score = 13;
    optional string phase = 14;
    optional string id = 15;
    optional int64 start = 16;
    optional int64 stop = 17;
    optional StrandPB strand = 18;

    enum StrandPB{
        POSITIVE = 1;
        NEGATIVE = 2;
        NOT_STRANDED = 3;
        UNKNOWN = 4;
    }
}

message FeatureSetPB {
    // atom/molecule stuff
    optional AtomPB atom = 1;
    optional FeatureSetPB precedingVersion = 2;
    //optional ACLPB acl = 3; // deprecated
    optional MoleculePB mol = 4;
    // FeatureSet-specific
    optional string description = 10;
    repeated FSGIDPB features = 11;
    optional SGIDPB referenceID = 12;
}

message UserPB {
    // atom/molecule stuff
    optional AtomPB atom = 1;
    optional UserPB precedingVersion = 2;
    //optional ACLPB acl = 3; // deprecated
    optional MoleculePB mol = 4;

    // User-specific
    optional string firstName = 10;
    optional string lastName = 11;
    optional string emailAddress = 12;
    optional string password = 13;
    repeated SGIDPB grps = 14;
}

message GroupPB {
    // atom/molecule stuff
    optional AtomPB atom = 1;
    optional GroupPB precedingVersion = 2;
    //optional ACLPB acl = 3; // deprecated
    optional MoleculePB mol = 4;
    // Group-specific
    optional string name = 10;
    optional string description = 11;
    repeated SGIDPB users = 12;
}

message ReferencePB {
    // atom/molecule stuff
    optional AtomPB atom = 1;
    optional ReferencePB precedingVersion = 3;
    //optional ACLPB acl = 5; // deprecated
    optional MoleculePB mol = 4;
    // Reference-specific
    optional string name = 10;
    // Let's not use this directly, circular problem since References refer to FeatureSets and FeatureSets refer to References 
    repeated SGIDPB featureSetIDs = 11;
}

message ReferenceSetPB {
    // atom/molecule stuff
    optional AtomPB atom = 1;
    optional ReferenceSetPB precedingVersion = 2;
    //optional ACLPB acl = 3; // deprecated
    optional MoleculePB mol = 4;
    // Reference-specific
    optional string name = 10;
    optional string organism = 11;
    repeated SGIDPB referenceIDs = 12;
}

message AnalysisPB {
    // atom/molecule stuff
    optional AtomPB atom = 1;
    optional AnalysisPB precedingVersion = 2;
    //optional ACLPB acl = 3; // deprecated
    optional MoleculePB mol = 4;
    // Reference-specific
    optional bytes parameters = 10;
}

message AnalysisSetPB {
    // atom/molecule stuff
    optional AtomPB atom = 1;
    optional AnalysisSetPB precedingVersion = 2;
    //optional ACLPB acl = 3; // deprecated
    optional MoleculePB mol = 4;
    // Reference-specific
    optional string name = 10;
    optional string description = 11;
    repeated SGIDPB analysisIDs = 12;
}

message TagSetPB {
    // atom/molecule stuff
    optional AtomPB atom = 1;
    optional TagSetPB precedingVersion = 3;
    //optional ACLPB acl = 5; // deprecated
    optional MoleculePB mol = 4;
    // Reference-specific
    optional string name = 10;
    repeated SGIDPB tagIDs = 11;
}



