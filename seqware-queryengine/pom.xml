
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>seqware-queryengine</artifactId>
    <packaging>jar</packaging>

    <name>seqware-queryengine</name>
    <description>SeqWare Query Backend</description>
    <url>https://github.com/SeqWare/seqware</url>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <protobuf.version>2.4.1</protobuf.version>
        <jersey-version>1.14</jersey-version>
    </properties>
    <parent>
        <groupId>com.github.seqware</groupId>
        <artifactId>seqware</artifactId>
        <version>0.13.6.1</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <repositories>
        <repository>
            <id>Cloudera repository</id>
            <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
        </repository>
        <!--
	<repository>
            <id>biojava3-repository</id>
            <name>BioJava Repository</name>
            <url>http://biojava.org/download/maven</url>
        </repository>

        <repository>
            <id>biojava-maven-repo</id>
            <name>BioJava Repository</name>
            <url>http://biojava.org/download/maven</url>
        </repository>
        -->
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>dependencies.seqware.sourceforge.net</id>
            <name>SeqWare Dependencies Maven Repository</name>
            <url>http://seqwaremaven.oicr.on.ca/artifactory/seqware-dependencies</url>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <resources>
            <resource>
                <directory>target/generated-sources/protobuf-dto</directory>
                <includes>
                    <include>**/*.java</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-plugin.version}</version>
                <inherited>true</inherited>
                <configuration>
                    <packagingExcludes>**/servlet*.jar,META-INF/context.xml</packagingExcludes>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>tomcat-maven-plugin</artifactId>
                <!-- snapshot was here but commented out originally, using the latest released version as checked by mvn help:describe -DgroupId=org.codehaus.mojo  -DartifactId=tomcat-maven-plugin -Dfull=true | less -->
                <version>1.1</version>
                <!--                <version>1.2-SNAPSHOT</version>-->
                <configuration>
                    <mode>war</mode>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <executions>
                    <execution>
                        <id>make-a-jar</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- clean up temporary files generated by the query engine file storage model -->
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>/tmp/com.github.seqware.queryengine.impl.TmpFileStorage</directory>
                            <includes>
                                <include>*</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <!-- only try to run self-contained tests here -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <includes>
                        <include>**/*Suite.java</include>
                    </includes>
                    <excludes>
                        <include>**/*HBase*.java</include>
                        <include>**/*System*.java</include>
                        <include>**/*Impl*.java</include>
                    </excludes>
                    <!--  <forkMode>
never
</forkMode>
                		  -->
                </configuration>
            </plugin>
            <plugin>
                <!-- thanks to wibidata, this plugin allows us to spin up and shut down a mini-hbase cluster for hbase testing -->
                <groupId>com.wibidata.maven.plugins</groupId>
                <artifactId>hbase-maven-plugin</artifactId>
                <version>1.0.7-cdh4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>start</goal>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>${skipITs}</skip>
                    <mapReduceEnabled>true</mapReduceEnabled>
                    <hadoopConfiguration>
                        <!-- scanners seem to timeout more often when using this mini-cluster, possible for performance reasons -->
                        <property>
                            <name>hbase.client.scanner.timeout.period</name>	
                            <value>120000</value>
                        </property>
                        <property>
                            <name>hbase.regionserver.lease.period</name>	
                            <value>120000</value>
                        </property>
                    </hadoopConfiguration>
                </configuration>
            </plugin>
            <plugin>
                <!-- try to run tests that require HBase here -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includes>
                        <include>**/*Suite.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>target/generated-sources/protobuf-dto</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <tasks>
                                <!-- Determine which protoc binary we can use -->
                                <condition property="os.protoc" value="${protobuf.version}-linux-x86_64">
                                    <or>
                                        <os name="linux" arch="amd64" />
                                        <os name="linux" arch="x86_64" />
                                    </or>
                                </condition>
                                <condition property="os.protoc" value="${protobuf.version}-linux-x86_32">
                                    <or>
                                        <os name="linux" arch="x86" />
                                        <os name="linux" arch="i386" />
                                    </or>
                                </condition>
                                <condition property="os.protoc" value="${protobuf.version}-win32">
                                    <os family="windows" />
                                </condition>
                                <condition property="os.protoc" value="${protobuf.version}-mac-x86_64">
                                    <os name="Mac OS X" arch="x86_64" />
                                </condition>

                                <fail message="No protoc binary for your OS: ${os.name} ${os.arch}." unless="os.protoc" />

                                <mkdir dir="target/generated-sources/protobuf-dto" />

                                <path id="protofiles">
                                    <fileset dir="src/main/protobuf">
                                        <include name="*.proto" />
                                    </fileset>
                                </path>
                                <pathconvert pathsep=" " property="protofilesList" refid="protofiles">
                                    <map from="${basedir}/" to="" />
                                </pathconvert>

                                <!-- Compile our .proto file -->
                                <exec dir="${basedir}" executable="${basedir}/tools/protoc-${os.protoc}" failonerror="true">
                                    <arg value="--java_out=target/generated-sources/protobuf-dto" />
                                    <arg line="${protofilesList}" />
                                    <arg line="-Isrc/main/protobuf" />
                                </exec>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <configuration>
                    <findbugsXmlOutput>true</findbugsXmlOutput>
                    <findbugsXmlWithMessages>true</findbugsXmlWithMessages>
                    <xmlOutput>true</xmlOutput>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin.version}</version>
                <configuration>
                    <targetJdk>1.6</targetJdk>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase</artifactId>
            <!-- current public version
                                              		    <version>0.94.0</version>
            -->
            <!-- current Cloudera stable -->
            <version>0.92.1-cdh4.1.2</version>
            <exclusions>
                <exclusion>
                    <groupId>com.sun.xml.bind</groupId>
                    <artifactId>jaxb-impl</artifactId>                        
                </exclusion>
                <exclusion>
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>                        
                </exclusion>
                <exclusion>
                    <artifactId>jersey-server</artifactId>
                    <groupId>com.sun.jersey</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>snappy-java</artifactId>
                    <groupId>org.xerial.snappy</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>jetty</artifactId>
                    <groupId>org.mortbay.jetty</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>jetty-util</artifactId>
                    <groupId>org.mortbay.jetty</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>jersey-core</artifactId>
                    <groupId>com.sun.jersey</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>servlet-api</artifactId>
                    <groupId>javax.servlet</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>servlet-api-2.5</artifactId>
                    <groupId>org.mortbay.jetty</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <artifactId>hadoop-core</artifactId>
            <groupId>org.apache.hadoop</groupId>
            <!-- current public version
      		    <version>1.0.3</version>
      		    -->
            <!-- current Cloudera stable -->
            <version>2.0.0-mr1-cdh4.1.2 </version>
            <exclusions>
                <exclusion>
                    <artifactId>jetty</artifactId>
                    <groupId>org.mortbay.jetty</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>jetty-util</artifactId>
                    <groupId>org.mortbay.jetty</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>servlet-api</artifactId>
                    <groupId>javax.servlet</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <artifactId>hadoop-client</artifactId>
            <groupId>org.apache.hadoop</groupId>
            <version>2.0.0-cdh4.1.2</version>
            <exclusions>
                <exclusion>
                    <artifactId>jersey-server</artifactId>
                    <groupId>com.sun.jersey</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>jersey-test-framework-grizzly2</artifactId>
                    <groupId>com.sun.jersey.jersey-test-framework</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>asm</artifactId>
                    <groupId>asm</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <artifactId>hadoop-tools</artifactId>
            <groupId>org.apache.hadoop</groupId>
            <!-- current public version
                                          		    <version>1.0.3</version>
   	        -->
            <!-- current Cloudera stable -->
            <version>2.0.0-mr1-cdh4.1.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>${commons-compress.version}</version>
        </dependency>
        
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${commons-cli.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-exec</artifactId>
            <version>${commons-exec.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.esotericsoftware.kryo</groupId>
            <artifactId>kryo</artifactId>
            <version>2.19</version>
            <exclusions>
                <exclusion>
                    <artifactId>asm</artifactId>
                    <groupId>org.ow2.asm</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>${protobuf.version}</version>
        </dependency>
        <dependency>
            <groupId>berkeley-db</groupId>
            <artifactId>c-lib-with-java</artifactId>
            <version>4.7.25</version>
        </dependency>
        <dependency>
            <groupId>org.biojava</groupId>
            <artifactId>biojava3-genome</artifactId>
            <version>3.0.4</version>
        </dependency>
        <dependency>
            <groupId>org.biojava</groupId>
            <artifactId>core</artifactId>
            <version>1.8.2</version>
        </dependency>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr</artifactId>
            <version>3.4</version>
        </dependency>
        <dependency>
            <groupId>com.github.seqware</groupId>
            <artifactId>seqware-common</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.transaction</groupId>
                    <artifactId>jta</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>jackson-core-asl</artifactId>
                    <groupId>org.codehaus.jackson</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>jackson-mapper-asl</artifactId>
                    <groupId>org.codehaus.jackson</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>spring-webmvc</artifactId>
                    <groupId>org.springframework</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>spring-tx</artifactId>
                    <groupId>org.springframework</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>spring-orm</artifactId>
                    <groupId>org.springframework</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>spring-core</artifactId>
                    <groupId>org.springframework</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>org.restlet</artifactId>
                    <groupId>org.restlet.jee</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>org.restlet.ext.httpclient</artifactId>
                    <groupId>org.restlet.jee</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>org.restlet.ext.jackson</artifactId>
                    <groupId>org.restlet.jee</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>org.restlet.ext.ssl</artifactId>
                    <groupId>org.restlet.jee</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>org.restlet.ext.xml</artifactId>
                    <groupId>org.restlet.jee</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>org.restlet.ext.xstream</artifactId>
                    <groupId>org.restlet.jee</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- dependencies for REST, some may be optional -->
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-grizzly2</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-servlet</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.protobuf-java-format</groupId>
            <artifactId>protobuf-java-format</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>com.wordnik</groupId>
            <artifactId>swagger-jaxrs_2.9.1</artifactId>
            <version>1.1.0</version>
            <scope>compile</scope>
        </dependency>
        <!--  Gson: Java to Json conversion -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.2.2</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>
</project>
