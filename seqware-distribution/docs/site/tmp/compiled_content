{:	data{"/about/{:default{	:	post"‰<!DOCTYPE HTML>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>SeqWare - About</title>
    <link rel="stylesheet" type="text/css" href="/style.css" media="screen">
    <meta name="generator" content="nanoc 3.3.6">
  </head>
  <body>
    <div id="homepic">
      <a href="/"><img src="/pictures/seqware_logo.png"/></a>
    </div>
    <div id="main">
     <h1 id="seqware">SeqWare</h1>

<p>The open source SeqWare project is a portable software infrastructure designed to analyze massive genomics datasets produced by contemporary and emerging technologies, in particular Next Generation Sequencing (NGS) platforms.  It consists of a comprehensive suite of tools focused on enabling the end-to-end analysis of sequence data &ndash; from from raw base calling to analyzed variants ready for interpretation by users.</p>

<p>SeqWare currently provides four tools specifically designed to support massively parallel sequencing technologies. All four tools can be used together or separately. </p>

<ul>
  <li><strong>Portal</strong>: a LIMS-like web application to manage samples, record computational events, and present results back to end users. </li>
  <li><strong>Pipeline</strong>: a workflow engine that is capable of wrapping and combining other tools (BFAST, BWA, SAMtools, etc) into complex pipelines, recording metadata about the analysis, and facilitates automation of pipelines based on metadata. </li>
  <li><strong>Query Engine</strong>:  a query tool to store and query variants and other events inferred from sequence data. </li>
  <li><strong>MetaDB</strong>: provides a common database to store metadata used by all components. </li>
</ul>

<p>SeqWare is currently used by a variety of NGS users including the <a href="http://unclineberger.org/">Lineberger Comprehensive Cancer Center at UNC</a>, at the <a href="http://oicr.on.ca/">Ontario Institute for Cancer Research in Toronto</a> and by our commercial partner <a href="http://nimbusinformatics.com/">Nimbus Informatics</a>.</p>

<h2 id="citation">Citation</h2>
<p>O&rsquo;Connor, B. D., B. Merriman, and S. F. Nelson. <a href="http://www.biomedcentral.com/1471-2105/11/S12/S2">SeqWare Query Engine: storing and searching sequence data in the cloud</a>. BMC Bioinformatics 2010, 11(Suppl 12):S2</p>

    </div>
    <div id="sidebar">
    <ul>
	<li><a href="/about/"><span>About SeqWare</span></a></li>
	<li><a href="/download/"><span>Download</span></a></li>
     </ul>
     <h2><span>Quick Reference</span></h2>
      <ul>
	<li><a href="/users/"><span>User Guide</span></a></li>
	<li><a href="/administrators/"><span>Administrator Guide</span></a></li>
	<li><a href="/source/"><span>Developers Guide</span></a></li>
        <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Main_Page"><span>Old Wiki</span></a></li>
    </ul>
    <h2><span>APIs</span></h2>
    <ul>
	<li><a href="/webservice-api/"><span>Web Service API</span></a></li>
 	<li><a href="/queryengine-api/"><span>Query Engine API</span></a></li>
    </ul>
      <h2><span>Contact</span></h2>
      <ul>
	<li><a href="http://sourceforge.net/mail/?group_id=239239"><span>Mailing Lists</span></a></li>
	<li><a href="mailto:seqware.jira@oicr.on.ca"><span>JIRA Bug Tracker</span></a></li>
      </ul>
    </div>
  </body>
</html>
:pre"z<h1 id="seqware">SeqWare</h1>

<p>The open source SeqWare project is a portable software infrastructure designed to analyze massive genomics datasets produced by contemporary and emerging technologies, in particular Next Generation Sequencing (NGS) platforms.  It consists of a comprehensive suite of tools focused on enabling the end-to-end analysis of sequence data &ndash; from from raw base calling to analyzed variants ready for interpretation by users.</p>

<p>SeqWare currently provides four tools specifically designed to support massively parallel sequencing technologies. All four tools can be used together or separately. </p>

<ul>
  <li><strong>Portal</strong>: a LIMS-like web application to manage samples, record computational events, and present results back to end users. </li>
  <li><strong>Pipeline</strong>: a workflow engine that is capable of wrapping and combining other tools (BFAST, BWA, SAMtools, etc) into complex pipelines, recording metadata about the analysis, and facilitates automation of pipelines based on metadata. </li>
  <li><strong>Query Engine</strong>:  a query tool to store and query variants and other events inferred from sequence data. </li>
  <li><strong>MetaDB</strong>: provides a common database to store metadata used by all components. </li>
</ul>

<p>SeqWare is currently used by a variety of NGS users including the <a href="http://unclineberger.org/">Lineberger Comprehensive Cancer Center at UNC</a>, at the <a href="http://oicr.on.ca/">Ontario Institute for Cancer Research in Toronto</a> and by our commercial partner <a href="http://nimbusinformatics.com/">Nimbus Informatics</a>.</p>

<h2 id="citation">Citation</h2>
<p>O&rsquo;Connor, B. D., B. Merriman, and S. F. Nelson. <a href="http://www.biomedcentral.com/1471-2105/11/S12/S2">SeqWare Query Engine: storing and searching sequence data in the cloud</a>. BMC Bioinformatics 2010, 11(Suppl 12):S2</p>
:raw"≤SeqWare
============

The open source SeqWare project is a portable software infrastructure designed to analyze massive genomics datasets produced by contemporary and emerging technologies, in particular Next Generation Sequencing (NGS) platforms.  It consists of a comprehensive suite of tools focused on enabling the end-to-end analysis of sequence data -- from from raw base calling to analyzed variants ready for interpretation by users.

SeqWare currently provides four tools specifically designed to support massively parallel sequencing technologies. All four tools can be used together or separately. 

* **Portal**: a LIMS-like web application to manage samples, record computational events, and present results back to end users. 
*  **Pipeline**: a workflow engine that is capable of wrapping and combining other tools (BFAST, BWA, SAMtools, etc) into complex pipelines, recording metadata about the analysis, and facilitates automation of pipelines based on metadata. 
* **Query Engine**:  a query tool to store and query variants and other events inferred from sequence data. 
*  **MetaDB**: provides a common database to store metadata used by all components. 

SeqWare is currently used by a variety of NGS users including the [Lineberger Comprehensive Cancer Center at UNC](http://unclineberger.org/), at the [Ontario Institute for Cancer Research in Toronto](http://oicr.on.ca/) and by our commercial partner [Nimbus Informatics](http://nimbusinformatics.com/).

Citation
------------
O'Connor, B. D., B. Merriman, and S. F. Nelson. [SeqWare Query Engine: storing and searching sequence data in the cloud](http://www.biomedcentral.com/1471-2105/11/S12/S2). BMC Bioinformatics 2010, 11(Suppl 12):S2:	last@
"/manuals/{;{	;"ê<!DOCTYPE HTML>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>SeqWare - A New Item</title>
    <link rel="stylesheet" type="text/css" href="/style.css" media="screen">
    <meta name="generator" content="nanoc 3.3.6">
  </head>
  <body>
    <div id="homepic">
      <a href="/"><img src="/pictures/seqware_logo.png"/></a>
    </div>
    <div id="main">
     <p>Hi, I&rsquo;m a new item!</p>

    </div>
    <div id="sidebar">
    <ul>
	<li><a href="/about/"><span>About SeqWare</span></a></li>
	<li><a href="/download/"><span>Download</span></a></li>
     </ul>
     <h2><span>Quick Reference</span></h2>
      <ul>
	<li><a href="/users/"><span>User Guide</span></a></li>
	<li><a href="/administrators/"><span>Administrator Guide</span></a></li>
	<li><a href="/source/"><span>Developers Guide</span></a></li>
        <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Main_Page"><span>Old Wiki</span></a></li>
    </ul>
    <h2><span>APIs</span></h2>
    <ul>
	<li><a href="/webservice-api/"><span>Web Service API</span></a></li>
 	<li><a href="/queryengine-api/"><span>Query Engine API</span></a></li>
    </ul>
      <h2><span>Contact</span></h2>
      <ul>
	<li><a href="http://sourceforge.net/mail/?group_id=239239"><span>Mailing Lists</span></a></li>
	<li><a href="mailto:seqware.jira@oicr.on.ca"><span>JIRA Bug Tracker</span></a></li>
      </ul>
    </div>
  </body>
</html>
;"&<p>Hi, I&rsquo;m a new item!</p>
;	"Hi, I'm a new item!;
@"/pictures/Develop/{;{ "/download/{;{	;"

<!DOCTYPE HTML>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>SeqWare - Downloads</title>
    <link rel="stylesheet" type="text/css" href="/style.css" media="screen">
    <meta name="generator" content="nanoc 3.3.6">
  </head>
  <body>
    <div id="homepic">
      <a href="/"><img src="/pictures/seqware_logo.png"/></a>
    </div>
    <div id="main">
     <h1 id="downloads">Downloads</h1>

<h2 id="seqware-pipeline">SeqWare Pipeline</h2>
<p>The latest version of the pipeline jar is always available on our continuous build server. Please choose the jar that has the -full suffix, e.g. <a href="http://jenkins.res.oicr.on.ca/job/seqware/lastStableBuild/net.sourceforge.seqware$seqware-distribution/">seqware-distribution-0.12.5-SNAPSHOT-full.jar</a>.</p>

<h2 id="source-code">Source Code</h2>

<p>We are currently in the process of migrating from SourceForge to GitHub, so our code is distributed between two locations:</p>

<ol>
  <li><a href="http://sourceforge.net/scm/?type=svn&amp;group_id=239239">Subversion on SourceForge</a> : All of our SeqWare Pipeline, MetaDB, Portal and archetype code</li>
  <li><a href="https://github.com/SeqWare/seqware">Git on GitHub</a> : Our query engine code and website documentation (including this site!)</li>
</ol>

<p>Please be patient with us as we transition, and send any of your questions or comments to one of our <a href="http://sourceforge.net/mail/?group_id=239239">mailing lists</a>.</p>

<h2 id="virtual-machines-vms-and-amis">Virtual Machines (VMs) and AMIs</h2>

<p>&hellip;.</p>

    </div>
    <div id="sidebar">
    <ul>
	<li><a href="/about/"><span>About SeqWare</span></a></li>
	<li><a href="/download/"><span>Download</span></a></li>
     </ul>
     <h2><span>Quick Reference</span></h2>
      <ul>
	<li><a href="/users/"><span>User Guide</span></a></li>
	<li><a href="/administrators/"><span>Administrator Guide</span></a></li>
	<li><a href="/source/"><span>Developers Guide</span></a></li>
        <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Main_Page"><span>Old Wiki</span></a></li>
    </ul>
    <h2><span>APIs</span></h2>
    <ul>
	<li><a href="/webservice-api/"><span>Web Service API</span></a></li>
 	<li><a href="/queryengine-api/"><span>Query Engine API</span></a></li>
    </ul>
      <h2><span>Contact</span></h2>
      <ul>
	<li><a href="http://sourceforge.net/mail/?group_id=239239"><span>Mailing Lists</span></a></li>
	<li><a href="mailto:seqware.jira@oicr.on.ca"><span>JIRA Bug Tracker</span></a></li>
      </ul>
    </div>
  </body>
</html>
;"ú<h1 id="downloads">Downloads</h1>

<h2 id="seqware-pipeline">SeqWare Pipeline</h2>
<p>The latest version of the pipeline jar is always available on our continuous build server. Please choose the jar that has the -full suffix, e.g. <a href="http://jenkins.res.oicr.on.ca/job/seqware/lastStableBuild/net.sourceforge.seqware$seqware-distribution/">seqware-distribution-0.12.5-SNAPSHOT-full.jar</a>.</p>

<h2 id="source-code">Source Code</h2>

<p>We are currently in the process of migrating from SourceForge to GitHub, so our code is distributed between two locations:</p>

<ol>
  <li><a href="http://sourceforge.net/scm/?type=svn&amp;group_id=239239">Subversion on SourceForge</a> : All of our SeqWare Pipeline, MetaDB, Portal and archetype code</li>
  <li><a href="https://github.com/SeqWare/seqware">Git on GitHub</a> : Our query engine code and website documentation (including this site!)</li>
</ol>

<p>Please be patient with us as we transition, and send any of your questions or comments to one of our <a href="http://sourceforge.net/mail/?group_id=239239">mailing lists</a>.</p>

<h2 id="virtual-machines-vms-and-amis">Virtual Machines (VMs) and AMIs</h2>

<p>&hellip;.</p>
;	"Downloads
====================

SeqWare Pipeline
-------------------
The latest version of the pipeline jar is always available on our continuous build server. Please choose the jar that has the -full suffix, e.g. [seqware-distribution-0.12.5-SNAPSHOT-full.jar](http://jenkins.res.oicr.on.ca/job/seqware/lastStableBuild/net.sourceforge.seqware$seqware-distribution/).


Source Code
----------------

We are currently in the process of migrating from SourceForge to GitHub, so our code is distributed between two locations:

1. [Subversion on SourceForge](http://sourceforge.net/scm/?type=svn&group_id=239239) : All of our SeqWare Pipeline, MetaDB, Portal and archetype code
2. [Git on GitHub](https://github.com/SeqWare/seqware) : Our query engine code and website documentation (including this site!)

Please be patient with us as we transition, and send any of your questions or comments to one of our [mailing lists](http://sourceforge.net/mail/?group_id=239239).


Virtual Machines (VMs) and AMIs
-------------------------------

....;
@"!/manuals/command_line_tools/{;{	;"Ñm<!DOCTYPE HTML>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>SeqWare - Command-Line Tools</title>
    <link rel="stylesheet" type="text/css" href="/style.css" media="screen">
    <meta name="generator" content="nanoc 3.3.6">
  </head>
  <body>
    <div id="homepic">
      <a href="/"><img src="/pictures/seqware_logo.png"/></a>
    </div>
    <div id="main">
     <h1 id="command-line-tools">Command-Line Tools</h1>

<h2 id="about">About</h2>

<p>This guide will show you how to use command line tools to access the SeqWare metadatabase. This will allow you to do the following tasks using tools that can be scripted versus our Portal web-based interface that requires a user to click on an interface:</p>

<ul>
  <li>upload data such as fastq files to the cloud and associate that data with particular samples</li>
  <li>find the list of available workflows and the parameters they accept</li>
  <li>schedule a workflow and monitor its progress</li>
  <li>find a list of files produced by a workflow</li>
  <li>download files produced by a workflow</li>
</ul>

<p>The command line tools are Java wrappers for our RESTful Web Service. If you would like to learn more about the low-level API (perhaps you want to call it directly in a program or script) you can find more information on our old SeqWare wiki page: <a href="https://sourceforge.net/apps/mediawiki/seqware/index.php?title=SeqWare_WebService">SeqWare WebService</a>.</p>

<h2 id="tools-and-requirements">Tools and Requirements</h2>

<p>You will need to download the SeqWare jar file from our continuous build server. Please choose the jar that has the -full suffix, e.g. <a href="http://jenkins.res.oicr.on.ca/job/seqware/lastStableBuild/net.sourceforge.seqware$seqware-distribution/">seqware-distribution-0.12.5-SNAPSHOT-full.jar</a>.</p>

<p>SeqWare is open source architecture built in Java. The jar file contains client code that will allow you to interact with a web service (either on a VM, installed on a cluster or in the cloud) that controls, among other things, workflow execution. You should use this tool on a recent Linux distribution (like RedHat, Ubuntu, or CentOS) using Oracle Java 1.6 or newer.  MacOSX and Windows have not been tested.</p>

<p>Once you download the jar file you will need to setup a configuration file. By default the location is ~/.seqware/settings.</p>

<p>This file contains the web address of the RESTful web service, your username and password, and you Amazon public and private keys that will allow you to push and pull data files to and from the cloud.  Here is an example settings file, please check with the SeqWare Help Desk to ensure your settings are correct, especially the SW_REST_URL since that might change:</p>

<pre><code># GENERAL
SW_METADATA_METHOD=webservice
# API
# the base URL for the RESTful SeqWare API
# this is our production server‚Äôs address
SW_REST_URL=http://SeqWareWS
# the username and password to connect to the REST API, this is used by SeqWare Pipeline to write back processing info to the DB
SW_REST_USER=user@host.com
SW_REST_PASS=password
# Amazon Cloud Settings
# used by tools reading and writing to S3 buckets (dependency
# data/software bundles, inputs, outputs, etc)
AWS_ACCESS_KEY=example
AWS_SECRET_KEY=example
</code></pre>

<h2 id="creating-studies-experiments-and-samples">Creating Studies, Experiments, and Samples</h2>

<p>You can do this either with the <a href="http://SeqWarePortal" title="SeqWare Portal">Portal</a> or via the command line tools below.</p>

<p>You will want to set up your study, experiments, and samples before uploading your fastq or other data files.  This ensures you have ‚Äúparents‚Äù to attach these files to.  Otherwise you will not be able to use them as parameters for workflows. In the following screenshot you see the links that allow you to create these entities through the web application.</p>

<p>There are also command line tools for creating study, experiment, and samples.  The functionality for each of these is fairly limited.  For example, the rich descriptive language for how a read is structured is not yet fully supported and updates to existing entities are not yet possible.  However the basic functionality to create studies, experiments, and samples now exists in a scriptable form.</p>

<p>First, you can find out what tables this tool is capable of writing:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.Metadata -- --list-tables

TableName
study
experiment
sample
</code></pre>

<p>Now, for a given table, you can find out what fields you can write back to and their type:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.Metadata -- --table study --list-fields

Field    Type    Possible_Values
title    String
description    String
accession    String
center_name    String
center_project_name    String
study_type    Integer    [1: Whole Genome Sequencing, 2: Metagenomics, 3: Transcriptome Analysis, 4: Resequencing, 5: Epigenetics, 6: Synthetic Genomics, 7: Forensic or Paleo-genomics, 8: Gene Regulation Study, 9: Cancer Genomics, 10: Population Genomics, 11: Other]
</code></pre>

<p>So using the information above I can create a new study:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.Metadata -- --table study --create --field 'title::New Test Study' --field 'description::This is a test description' --field 'accession::InternalID123' --field 'center_name::SeqWare' --field 'center_project_name::SeqWare Test Project' --field study_type::4

SWID: 29830
</code></pre>

<p>The output of this command above includes the line ‚ÄúSWID: 29830‚Äù.  This is very important since this number is a unique identifier across the database and used to link together entities.  For example, you will use the number produced by the study add command as the parent for the experiment you create below.  If you do not track and supply these numbers then the hierarchy of study/experiment/sample cannot be created.</p>

<p>The next step is to create an experiment and link it to the study you created above. You can find the platform ID using the &ndash;list-fields option shown above:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.Metadata -- --table experiment --create --field 'title::New Test Experiment' --field 'description::This is a test description' --field study_accession::29830 --field platform_id::26

SWID: 29831
</code></pre>

<p>Again, you use the SWID from the above output in the next step to create an associated sample. You can find the platform ID using the &ndash;list-fields option shown above:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.Metadata -- --table sample --create --field 'title::New Test Sample' --field 'description::This is a test description' --field experiment_accession::29831 --field organism_id::26

SWID: 29832
</code></pre>

<p>At this point you should have a nice study/experiment/sample hierarchy.  You can, of course, add multiple samples per experiment and multiple experiments per study.  For each of the samples you can now upload one or more fastq files.  You will need the SWID from the sample creation above for this step.  Here is a screenshot of what the above commands produce in the Portal:</p>

<h2 id="uploading-fastq-and-associating-with-a-sample">Uploading Fastq and Associating with a Sample</h2>

<p>The first step in uploading a fastq file(s) and associating with a sample is to identify the sample‚Äôs SWID. The easiest way to do this is to use the Portal web application to navigate through the Study/Experiment/Sample tree to the sample you want to upload fastq for and to note its associated SWID.  You then need to know the destination ‚Äúbucket‚Äù you have been assigned. If you do not know your bucket you can email the SeqWare HelpDesk at <a href="seqware.jira@oicr.on.ca">seqware.jira@oicr.on.ca</a>. Once you have these two pieces of information you can then use the ProvisionFiles utility to push your files into the cloud and associate them with this sample.  Here is an example of calling this utility:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --module net.sourceforge.seqware.pipeline.modules.utilities.ProvisionFiles --metadata-output-file-prefix s3://bucket/samplename/ --metadata-parent-accession 29832 --metadata-processing-accession-file new_accession.txt -- -im fastq::chemical/seq-na-fastq-gzip::test_R1.fastq.gz -im fastq::chemical/seq-na-fastq-gzip::test_R2.fastq.gz -o s3://bucket/samplename/
</code></pre>

<blockquote>
  <p><strong>TIP:</strong> you can find a list of the meta types (like chemical/seq-na-fastq-gzip above) at <a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Module_Conventions#Module_MIME_Types">Module Conventions - Module MIME Types</a>. This is the list we add to as needed when creating new workflows.  It is extremely important to be consistent with these since a workflow will not recognize your input unless the meta type string matches what it expects exactly.</p>
</blockquote>

<p>In this example it will upload two fastq files to s3://bucket/samplename and will link them to the sample identified by 29832 (the sample‚Äôs SWID).  Use the portal to find out the SWID for an existing sample or get the SWID using the command line tool when you create a new study. Providing that here will cause the fastq to be associated with that parent sample.</p>

<h2 id="associating-existing-files-with-a-sample">Associating Existing Files with a Sample</h2>
<p>The best way to get data into the cloud is to use the ProvisionFiles utility above since it both uploads the data (using multiple threads to maximize performance) and also saves the metadata back to the database.  However, sometimes you have already uploaded data to your designated bucket and just want to link the files to particular samples or IUSs in the database.  GenericMetadataSaver is the tool you can use to accomplish this, for example:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --module net.sourceforge.seqware.pipeline.modules.GenericMetadataSaver --metadata-parent-accession 25192 -- --gms-output-file fastq::chemical/seq-na-fastq-gzip::s3://bucket/sample/Sample/GAA_L001_R1_001.fastq.gz --gms-algorithm UploadLane1 --gms-suppress-output-file-check
</code></pre>

<p>Here files are associated with the parent (SWID: 25192 which is an IUS).  These paths already exist in S3.  See List Files in S3 below for how to use a tool to list out your successfully uploaded files.  That tool gives you the s3:// URLs like the ones above.</p>

<h2 id="listing-available-workflows-and-their-parameters">Listing Available Workflows and Their Parameters</h2>

<p>Once you have uploaded data the next step is to find the available workflows and their parameters.  To see the list of available workflows you can execute the following command:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.BundleManager -- --list-install
</code></pre>

<p>You will get a tab-delimited list of workflows showing their name, version, and (most importantly) their SWID.  </p>

<blockquote>
  <p><strong>TIP:</strong> it may be easier for you to read the output by cutting and pasting into a spreadsheet.</p>
</blockquote>

<p>In this example we are going to use the latest (at the time of this writing) comprehensive exome workflow (13224).  The output of the above command includes the line:</p>

<pre><code>ComprehensiveExomeGenomeAnalysis    0.10.5    Fri Mar 16 21:26:03 EDT 2012    13224    null/Pipeline_Bundle_ComprehensiveExomeGenomeAnalysis_0.10.5_SeqWare_0.10.0
</code></pre>

<p>The fourth column includes the SWID for this workflow that you will use in the next command to find all the parameters (and their defaults) that this workflow takes.  Here is the command, notice I redirect the output to create a basic ini file that can later be customized and used to submit a run of this workflow:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.BundleManager -- --list-workflow-params --workflow-accession 27133 &gt; workflow.ini
</code></pre>

<p>In this example the workflow ‚ÄúComprehensiveExomeGenomeAnalysis‚Äù version 0.10.5 (SWID 13224) parameters are listed.  The output conforms to the input you can use to parameterize and launch workflows.  For example:</p>

<pre><code>#key=min_freq:type=text:display=T:display_name= Min Allele Frequency
min_freq=0.2
#key=novoalign_gap_open_param:type=text:display=T:display_name=Novoalign Gap Open Penalty (-g, default 40)
novoalign_gap_open_param=40
</code></pre>

<blockquote>
  <p><strong>NOTE:</strong> the lines above have been wrapped but you should not include line breaks in your file.  Instead, make sure the file that you create using this tool (and customize for later launching a workflow) includes comment lines starting with ‚Äú#‚Äù and the key=value lines only.  In the command above the redirect to the file workflow.ini will include some extra lines of status output.  Make sure you remove these before continuing to launch the workflow with this ini file.  You can customize any values from the key/value pairs that you need to.  For example, the most frequent parameters you will customize are input files.  In the workflow example above you will want to customize input_fastq<em>1 and input_fastq</em>2.  For example, if you wanted to process the files you uploaded you would customize these lines as:</p>
</blockquote>

<pre><code>input_fastq_1=s3://bucket/samplename/test_R1.fastq.gz
input_fastq_2=s3://bucket/samplename/test_R2.fastq.gz
</code></pre>

<p>Since this is a low-level tool you may see many more parameters exposed with this tool than you would using the web Portal application.  Please use caution when customizing these values since some refer to items that affect the underlying infrastructure on EC2. If anything is not clear please consult with the Help Desk (seqware.jira@oicr.on.ca) so we can work with you to prepare your workflow configuration files.</p>

<blockquote>
  <p><strong>TIP:</strong> when you customize key-values in the ini file prepared above you do not need to include key-values that you leave unchanged.  If you do not include these the workflow will run with those values by default anyway.  Removing unchanged key-values will greatly reduce the size of your ini files making it much easier to see the key-values you are interested in.</p>
</blockquote>

<h2 id="triggering-a-workflow-and-monitoring-progress">Triggering a Workflow and Monitoring Progress</h2>

<p>At this point you know what workflow you are going to run and you have a customized ini file that contains, for example, the input files. The next step is to trigger the workflow using the ini file you prepared.</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.WorkflowLauncher -- --ini-files temp.ini --workflow-accession 13224 --schedule --parent-accessions 24656
</code></pre>

<blockquote>
  <p><strong>TIP:</strong> the parent-accessions is the SWID of the ProvisionFiles element that was added under the sample when use used this tool to upload the fastq files in the example above.  You MUST specify this otherwise the workflow‚Äôs results will not be linked to anything (they will be orphaned and will not be visible in the Portal or present in the reports below). Conveniently the ProvisionFiles tool will write these accessions to a file.</p>
</blockquote>

<p>This schedules the workflow to run on the cloud. It can take several minutes for a node to finish launching and pick up the workflow to run.  This process can be delayed if the total number of workflows submitted exceeds the maximum simultaneous allowed workflows.  This setting allows us to control the maximum number of cluster nodes launched at any one time. It is entirely configurable, please email the Help Desk (seqware.jira@oicr.on.ca) if you want to increase the maximum number of workflows. Any workflows submitted beyond this max will simply be held in ‚Äúsubmitted‚Äù state until other workflows finish.</p>

<p>Once submitted, you can use the Portal to list the number of submitted, running, and failed workflows.  Log into the Portal and click on the ‚ÄúShow Analysis‚Äù link under the Analysis panel.  You can then click on the tab for ‚ÄúRunning Analysis‚Äù to see what is submitted/running/failed.
A better way of monitoring workflows (and getting a list of the outputs) is to use the WorkflowRunReporter plugin. This will let you script the monitoring of workflow runs.</p>

<pre><code>java -jar ~/seqware-pipeline-0.12.1-r4898.jar -p net.sourceforge.seqware.pipeline.plugins.WorkflowRunReporter -- -wa 61841
</code></pre>

<p>In this example all the status information for workflows with workflow accession 61841 are printed out to a file in the local file system.  This includes several columns of interest including the status of the workflow, the output file types, and their locations in S3 or the file system. You can use this information to automate the checking of workflows and the retrieval of the results!</p>

<p>In the output from the above command you will see accessions for each workflow run. If the status is ‚Äúfailed‚Äù you can use resources directly on the Web Service to see what went wrong by returning the stderr and stdout from the workflow. This is how you might do that for a workflow_run with an accession of 6774:</p>

<pre><code>GET -C user@user.com:password http://seqwarews3.elasticbeanstalk.com/SeqWareWS/reports/workflowruns/6774/stderr
</code></pre>

<p>Keep in mind two things: </p>

<ol>
  <li>this is a non-standard URL since this feature is in testing</li>
  <li>this direct GET request will be replaced with a command-line tool in the near future.</li>
</ol>

<h2 id="downloading-workflow-results">Downloading Workflow Results</h2>

<p>Once a workflow has finished running you will want to list out the associated files and download the results.  While you can use the Portal for downloading files the best way to get files in bulk is to use our reporting tool. This produces a tab-delimited file that lists all the files produced for the workflows you are interested in.  You can then use the same ProvisionFiles utility above to pull files back.  Since the report produces a simple tab-delimited file you can easily automate the downloading of results by looping over the output files and calling ProvisionFiles using a script.</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.SymLinkFileReporter -- --no-links --output-filename study_report --workflow-accession 13224 --study 20120403_SEQ1
</code></pre>

<p>The output here is a study_report.csv file that contains a line for each file (both those uploaded and those produced by workflows).  You can also filter by file types, for example if you want to see report bundles:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.SymLinkFileReporter -- --no-links --output-filename study_report --workflow-accession 13224 --study 20120403_SEQ1 --file-type application/zip-report-bundle
</code></pre>

<p>Or an example filtering by sample:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.SymLinkFileReporter -- --no-links --output-filename study_report --workflow-accession 13224  --sample 20120403_SEQ1_GAG
</code></pre>

<p>You can use these URLs (such as s3://bucket/samplename/test_R1.fastq.gz) with ProvisionFiles to download results.  Here‚Äôs an example downloading a report bundle:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --module net.sourceforge.seqware.pipeline.modules.utilities.ProvisionFiles --no-metadata -- -i s3://bucket/results/seqware-0.10.0_ComprehensiveExomeGenomeAnalysis-0.10.5/59491657/GAG.fa.variant_quality.gatk.hg19.report.zip -o ./
</code></pre>

<p>Here the zip report bundle is downloaded to the current working directory on the computer you are working on.  In this way you can pull back the results of workflows entirely through scripts that wrap the SymLinkFileReporter and ProvisionFiles.</p>

<p>Also note the SymLinkFileReporter gives you SWIDs for processing events and entities such as studies, samples, and experiments.  You can use this tool to find these SWIDs that are used as ‚Äúparents‚Äù for workflow runs.</p>

<p>In addition to the command line tools, you can also use the Portal to explore the output of workflows triggered through the command line tools.</p>

<p>You can find more information on this report tool on the public SeqWare wiki: <a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=SymLink_Reporter">Study Reporter</a>.</p>

<blockquote>
  <p><strong>NOTE:</strong> in the example above I use &ndash;no-metadata with ProvisionFiles. This is to prevent the tool from writing back an event to the central database. Since you are just downloading a file (versus uploading a file) you do not really want to record that download event in the database.</p>
</blockquote>

<h2 id="listing-your-files-in-s3-c">Listing Your Files in S3 (C)</h2>

<p>Sometimes you may want to just list all the files uploaded (for files that are the result of processing from a workflow you might want to use the reporting tool described above since it will give you more information).  To list your files in a particular bucket:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --no-metadata --module net.sourceforge.seqware.pipeline.modules.utilities.S3ListFiles -- -u s3://bucket/prefix &gt; file_list.txt
</code></pre>

<p>The result is a file (file_list.txt above) that contains a line per file in the bucket.  Note you can specify just a bucket or a bucket and directory (prefix). The tool searches for any items in S3 that start with that bucket and prefix.</p>

<p>An example output:</p>

<pre><code>LISTING BUCKET: bucketname

* 20120213_SEQ1_R1_001_GAA_AGA.fastq.gz size=243.5K
* 20120213_SEQ1_R1_001_GAA_TAT.fastq.gz size=301.6K
* 20120213_SEQ1_R1_001_GAA_CGC.fastq.gz size=31.4M
...
BUCKET SIZE: 207.6G
</code></pre>

<h2 id="real-seqware-examples">Real SeqWare Examples</h2>

<p>The section below shows real examples using actual data files, upload locations, and samples from SeqWare.  Please be careful with the information below, you do not want to accidently overwrite these files for example.</p>

<h3 id="fastq-upload">Fastq Upload</h3>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --module net.sourceforge.seqware.pipeline.modules.utilities.ProvisionFiles --metadata-output-file-prefix s3://abcco.uploads/cmdlinetest/ --metadata-parent-accession 28766 --metadata-processing-accession-file new_accession.txt -- -im fastq::chemical/seq-na-fastq-gzip::sample.fastq.gz -o s3://abcco.uploads/cmdlinetest/
</code></pre>

<h3 id="associate-an-existing-file-with-sample">Associate an Existing File with Sample</h3>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --module net.sourceforge.seqware.pipeline.modules.GenericMetadataSaver --metadata-parent-accession 28751 -- --gms-output-file fastq::chemical/seq-na-fastq-gzip::s3://abcco.uploads/cmdlinetest/sample.fastq.gz --gms-algorithm UploadTest2 --gms-suppress-output-file-check
</code></pre>

<h3 id="listing-workflows-and-params">Listing Workflows and Params</h3>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.BundleManager -- --list-install

java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.BundleManager -- --list-workflow-params --workflow-accession 27133 &gt; workflow.ini
</code></pre>

<h3 id="launching-workflow">Launching Workflow</h3>
<p>Not going to really do this&hellip;</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.WorkflowLauncher -- --ini-files temp.ini --workflow-accession 13224 --schedule --parent-accessions 24656 Listing Workflow Results

java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.SymLinkFileReporter -- --no-links --output-filename study_report --workflow-accession 13224 --study 20120213_SEQ1

java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.SymLinkFileReporter -- --no-links --output-filename study_report --workflow-accession 13224 --study 20120213_SEQ1 --file-type application/zip-report-bundle

java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.SymLinkFileReporter -- --no-links --output-filename study_report --workflow-accession 13224 --study 20120213_SEQ1 --file-type application/zip-report-bundle --sample 20120213_MISEQ1_TCCTGAGC_TAGATCGC
</code></pre>

<h3 id="downloading-workflow-results-1">Downloading Workflow Results</h3>
<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --module net.sourceforge.seqware.pipeline.modules.utilities.ProvisionFiles --no-metadata -- -i s3://seqwareinformatics.analysis/results/seqware-0.10.0_ComprehensiveExomeGenomeAnalysis-0.10.5/69212341/0-1-20120213_SEQ1CGC.fa.alignment.report.zip -o ./
</code></pre>

<h3 id="listing-your-files-in-s3">Listing Your Files in S3</h3>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --no-metadata --module net.sourceforge.seqware.pipeline.modules.utilities.S3ListFiles -- -u s3://abcco.uploads &gt; file_list.txt
</code></pre>

<h2 id="to-do">To Do</h2>

<p>Here are the items we are currently working on to improve the command line tools. The goal is to make the command line tools a fully functional replacement for the Portal. This will allow clients to increase the throughput of file upload and workflow triggering through the system since the tools can be easily scripted.</p>

<ul>
  <li>command line tools to list, search, and add Study, Sample, and Experiments without having to use the Portal</li>
  <li>displaying SWID on every entity in the Portal (making it easier to ‚Äúattach‚Äù items such as Fastq files to items you see in the Portal)</li>
  <li>command line tool for listing and monitoring active workflows</li>
  <li>command line tool  for listing the parameters (ini_file field) that were used for a given workflow run (and maybe the full DAX too)</li>
</ul>

    </div>
    <div id="sidebar">
    <ul>
	<li><a href="/about/"><span>About SeqWare</span></a></li>
	<li><a href="/download/"><span>Download</span></a></li>
     </ul>
     <h2><span>Quick Reference</span></h2>
      <ul>
	<li><a href="/users/"><span>User Guide</span></a></li>
	<li><a href="/administrators/"><span>Administrator Guide</span></a></li>
	<li><a href="/source/"><span>Developers Guide</span></a></li>
        <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Main_Page"><span>Old Wiki</span></a></li>
    </ul>
    <h2><span>APIs</span></h2>
    <ul>
	<li><a href="/webservice-api/"><span>Web Service API</span></a></li>
 	<li><a href="/queryengine-api/"><span>Query Engine API</span></a></li>
    </ul>
      <h2><span>Contact</span></h2>
      <ul>
	<li><a href="http://sourceforge.net/mail/?group_id=239239"><span>Mailing Lists</span></a></li>
	<li><a href="mailto:seqware.jira@oicr.on.ca"><span>JIRA Bug Tracker</span></a></li>
      </ul>
    </div>
  </body>
</html>
;"h<h1 id="command-line-tools">Command-Line Tools</h1>

<h2 id="about">About</h2>

<p>This guide will show you how to use command line tools to access the SeqWare metadatabase. This will allow you to do the following tasks using tools that can be scripted versus our Portal web-based interface that requires a user to click on an interface:</p>

<ul>
  <li>upload data such as fastq files to the cloud and associate that data with particular samples</li>
  <li>find the list of available workflows and the parameters they accept</li>
  <li>schedule a workflow and monitor its progress</li>
  <li>find a list of files produced by a workflow</li>
  <li>download files produced by a workflow</li>
</ul>

<p>The command line tools are Java wrappers for our RESTful Web Service. If you would like to learn more about the low-level API (perhaps you want to call it directly in a program or script) you can find more information on our old SeqWare wiki page: <a href="https://sourceforge.net/apps/mediawiki/seqware/index.php?title=SeqWare_WebService">SeqWare WebService</a>.</p>

<h2 id="tools-and-requirements">Tools and Requirements</h2>

<p>You will need to download the SeqWare jar file from our continuous build server. Please choose the jar that has the -full suffix, e.g. <a href="http://jenkins.res.oicr.on.ca/job/seqware/lastStableBuild/net.sourceforge.seqware$seqware-distribution/">seqware-distribution-0.12.5-SNAPSHOT-full.jar</a>.</p>

<p>SeqWare is open source architecture built in Java. The jar file contains client code that will allow you to interact with a web service (either on a VM, installed on a cluster or in the cloud) that controls, among other things, workflow execution. You should use this tool on a recent Linux distribution (like RedHat, Ubuntu, or CentOS) using Oracle Java 1.6 or newer.  MacOSX and Windows have not been tested.</p>

<p>Once you download the jar file you will need to setup a configuration file. By default the location is ~/.seqware/settings.</p>

<p>This file contains the web address of the RESTful web service, your username and password, and you Amazon public and private keys that will allow you to push and pull data files to and from the cloud.  Here is an example settings file, please check with the SeqWare Help Desk to ensure your settings are correct, especially the SW_REST_URL since that might change:</p>

<pre><code># GENERAL
SW_METADATA_METHOD=webservice
# API
# the base URL for the RESTful SeqWare API
# this is our production server‚Äôs address
SW_REST_URL=http://SeqWareWS
# the username and password to connect to the REST API, this is used by SeqWare Pipeline to write back processing info to the DB
SW_REST_USER=user@host.com
SW_REST_PASS=password
# Amazon Cloud Settings
# used by tools reading and writing to S3 buckets (dependency
# data/software bundles, inputs, outputs, etc)
AWS_ACCESS_KEY=example
AWS_SECRET_KEY=example
</code></pre>

<h2 id="creating-studies-experiments-and-samples">Creating Studies, Experiments, and Samples</h2>

<p>You can do this either with the <a href="http://SeqWarePortal" title="SeqWare Portal">Portal</a> or via the command line tools below.</p>

<p>You will want to set up your study, experiments, and samples before uploading your fastq or other data files.  This ensures you have ‚Äúparents‚Äù to attach these files to.  Otherwise you will not be able to use them as parameters for workflows. In the following screenshot you see the links that allow you to create these entities through the web application.</p>

<p>There are also command line tools for creating study, experiment, and samples.  The functionality for each of these is fairly limited.  For example, the rich descriptive language for how a read is structured is not yet fully supported and updates to existing entities are not yet possible.  However the basic functionality to create studies, experiments, and samples now exists in a scriptable form.</p>

<p>First, you can find out what tables this tool is capable of writing:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.Metadata -- --list-tables

TableName
study
experiment
sample
</code></pre>

<p>Now, for a given table, you can find out what fields you can write back to and their type:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.Metadata -- --table study --list-fields

Field    Type    Possible_Values
title    String
description    String
accession    String
center_name    String
center_project_name    String
study_type    Integer    [1: Whole Genome Sequencing, 2: Metagenomics, 3: Transcriptome Analysis, 4: Resequencing, 5: Epigenetics, 6: Synthetic Genomics, 7: Forensic or Paleo-genomics, 8: Gene Regulation Study, 9: Cancer Genomics, 10: Population Genomics, 11: Other]
</code></pre>

<p>So using the information above I can create a new study:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.Metadata -- --table study --create --field 'title::New Test Study' --field 'description::This is a test description' --field 'accession::InternalID123' --field 'center_name::SeqWare' --field 'center_project_name::SeqWare Test Project' --field study_type::4

SWID: 29830
</code></pre>

<p>The output of this command above includes the line ‚ÄúSWID: 29830‚Äù.  This is very important since this number is a unique identifier across the database and used to link together entities.  For example, you will use the number produced by the study add command as the parent for the experiment you create below.  If you do not track and supply these numbers then the hierarchy of study/experiment/sample cannot be created.</p>

<p>The next step is to create an experiment and link it to the study you created above. You can find the platform ID using the &ndash;list-fields option shown above:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.Metadata -- --table experiment --create --field 'title::New Test Experiment' --field 'description::This is a test description' --field study_accession::29830 --field platform_id::26

SWID: 29831
</code></pre>

<p>Again, you use the SWID from the above output in the next step to create an associated sample. You can find the platform ID using the &ndash;list-fields option shown above:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.Metadata -- --table sample --create --field 'title::New Test Sample' --field 'description::This is a test description' --field experiment_accession::29831 --field organism_id::26

SWID: 29832
</code></pre>

<p>At this point you should have a nice study/experiment/sample hierarchy.  You can, of course, add multiple samples per experiment and multiple experiments per study.  For each of the samples you can now upload one or more fastq files.  You will need the SWID from the sample creation above for this step.  Here is a screenshot of what the above commands produce in the Portal:</p>

<h2 id="uploading-fastq-and-associating-with-a-sample">Uploading Fastq and Associating with a Sample</h2>

<p>The first step in uploading a fastq file(s) and associating with a sample is to identify the sample‚Äôs SWID. The easiest way to do this is to use the Portal web application to navigate through the Study/Experiment/Sample tree to the sample you want to upload fastq for and to note its associated SWID.  You then need to know the destination ‚Äúbucket‚Äù you have been assigned. If you do not know your bucket you can email the SeqWare HelpDesk at <a href="seqware.jira@oicr.on.ca">seqware.jira@oicr.on.ca</a>. Once you have these two pieces of information you can then use the ProvisionFiles utility to push your files into the cloud and associate them with this sample.  Here is an example of calling this utility:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --module net.sourceforge.seqware.pipeline.modules.utilities.ProvisionFiles --metadata-output-file-prefix s3://bucket/samplename/ --metadata-parent-accession 29832 --metadata-processing-accession-file new_accession.txt -- -im fastq::chemical/seq-na-fastq-gzip::test_R1.fastq.gz -im fastq::chemical/seq-na-fastq-gzip::test_R2.fastq.gz -o s3://bucket/samplename/
</code></pre>

<blockquote>
  <p><strong>TIP:</strong> you can find a list of the meta types (like chemical/seq-na-fastq-gzip above) at <a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Module_Conventions#Module_MIME_Types">Module Conventions - Module MIME Types</a>. This is the list we add to as needed when creating new workflows.  It is extremely important to be consistent with these since a workflow will not recognize your input unless the meta type string matches what it expects exactly.</p>
</blockquote>

<p>In this example it will upload two fastq files to s3://bucket/samplename and will link them to the sample identified by 29832 (the sample‚Äôs SWID).  Use the portal to find out the SWID for an existing sample or get the SWID using the command line tool when you create a new study. Providing that here will cause the fastq to be associated with that parent sample.</p>

<h2 id="associating-existing-files-with-a-sample">Associating Existing Files with a Sample</h2>
<p>The best way to get data into the cloud is to use the ProvisionFiles utility above since it both uploads the data (using multiple threads to maximize performance) and also saves the metadata back to the database.  However, sometimes you have already uploaded data to your designated bucket and just want to link the files to particular samples or IUSs in the database.  GenericMetadataSaver is the tool you can use to accomplish this, for example:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --module net.sourceforge.seqware.pipeline.modules.GenericMetadataSaver --metadata-parent-accession 25192 -- --gms-output-file fastq::chemical/seq-na-fastq-gzip::s3://bucket/sample/Sample/GAA_L001_R1_001.fastq.gz --gms-algorithm UploadLane1 --gms-suppress-output-file-check
</code></pre>

<p>Here files are associated with the parent (SWID: 25192 which is an IUS).  These paths already exist in S3.  See List Files in S3 below for how to use a tool to list out your successfully uploaded files.  That tool gives you the s3:// URLs like the ones above.</p>

<h2 id="listing-available-workflows-and-their-parameters">Listing Available Workflows and Their Parameters</h2>

<p>Once you have uploaded data the next step is to find the available workflows and their parameters.  To see the list of available workflows you can execute the following command:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.BundleManager -- --list-install
</code></pre>

<p>You will get a tab-delimited list of workflows showing their name, version, and (most importantly) their SWID.  </p>

<blockquote>
  <p><strong>TIP:</strong> it may be easier for you to read the output by cutting and pasting into a spreadsheet.</p>
</blockquote>

<p>In this example we are going to use the latest (at the time of this writing) comprehensive exome workflow (13224).  The output of the above command includes the line:</p>

<pre><code>ComprehensiveExomeGenomeAnalysis    0.10.5    Fri Mar 16 21:26:03 EDT 2012    13224    null/Pipeline_Bundle_ComprehensiveExomeGenomeAnalysis_0.10.5_SeqWare_0.10.0
</code></pre>

<p>The fourth column includes the SWID for this workflow that you will use in the next command to find all the parameters (and their defaults) that this workflow takes.  Here is the command, notice I redirect the output to create a basic ini file that can later be customized and used to submit a run of this workflow:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.BundleManager -- --list-workflow-params --workflow-accession 27133 &gt; workflow.ini
</code></pre>

<p>In this example the workflow ‚ÄúComprehensiveExomeGenomeAnalysis‚Äù version 0.10.5 (SWID 13224) parameters are listed.  The output conforms to the input you can use to parameterize and launch workflows.  For example:</p>

<pre><code>#key=min_freq:type=text:display=T:display_name= Min Allele Frequency
min_freq=0.2
#key=novoalign_gap_open_param:type=text:display=T:display_name=Novoalign Gap Open Penalty (-g, default 40)
novoalign_gap_open_param=40
</code></pre>

<blockquote>
  <p><strong>NOTE:</strong> the lines above have been wrapped but you should not include line breaks in your file.  Instead, make sure the file that you create using this tool (and customize for later launching a workflow) includes comment lines starting with ‚Äú#‚Äù and the key=value lines only.  In the command above the redirect to the file workflow.ini will include some extra lines of status output.  Make sure you remove these before continuing to launch the workflow with this ini file.  You can customize any values from the key/value pairs that you need to.  For example, the most frequent parameters you will customize are input files.  In the workflow example above you will want to customize input_fastq<em>1 and input_fastq</em>2.  For example, if you wanted to process the files you uploaded you would customize these lines as:</p>
</blockquote>

<pre><code>input_fastq_1=s3://bucket/samplename/test_R1.fastq.gz
input_fastq_2=s3://bucket/samplename/test_R2.fastq.gz
</code></pre>

<p>Since this is a low-level tool you may see many more parameters exposed with this tool than you would using the web Portal application.  Please use caution when customizing these values since some refer to items that affect the underlying infrastructure on EC2. If anything is not clear please consult with the Help Desk (seqware.jira@oicr.on.ca) so we can work with you to prepare your workflow configuration files.</p>

<blockquote>
  <p><strong>TIP:</strong> when you customize key-values in the ini file prepared above you do not need to include key-values that you leave unchanged.  If you do not include these the workflow will run with those values by default anyway.  Removing unchanged key-values will greatly reduce the size of your ini files making it much easier to see the key-values you are interested in.</p>
</blockquote>

<h2 id="triggering-a-workflow-and-monitoring-progress">Triggering a Workflow and Monitoring Progress</h2>

<p>At this point you know what workflow you are going to run and you have a customized ini file that contains, for example, the input files. The next step is to trigger the workflow using the ini file you prepared.</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.WorkflowLauncher -- --ini-files temp.ini --workflow-accession 13224 --schedule --parent-accessions 24656
</code></pre>

<blockquote>
  <p><strong>TIP:</strong> the parent-accessions is the SWID of the ProvisionFiles element that was added under the sample when use used this tool to upload the fastq files in the example above.  You MUST specify this otherwise the workflow‚Äôs results will not be linked to anything (they will be orphaned and will not be visible in the Portal or present in the reports below). Conveniently the ProvisionFiles tool will write these accessions to a file.</p>
</blockquote>

<p>This schedules the workflow to run on the cloud. It can take several minutes for a node to finish launching and pick up the workflow to run.  This process can be delayed if the total number of workflows submitted exceeds the maximum simultaneous allowed workflows.  This setting allows us to control the maximum number of cluster nodes launched at any one time. It is entirely configurable, please email the Help Desk (seqware.jira@oicr.on.ca) if you want to increase the maximum number of workflows. Any workflows submitted beyond this max will simply be held in ‚Äúsubmitted‚Äù state until other workflows finish.</p>

<p>Once submitted, you can use the Portal to list the number of submitted, running, and failed workflows.  Log into the Portal and click on the ‚ÄúShow Analysis‚Äù link under the Analysis panel.  You can then click on the tab for ‚ÄúRunning Analysis‚Äù to see what is submitted/running/failed.
A better way of monitoring workflows (and getting a list of the outputs) is to use the WorkflowRunReporter plugin. This will let you script the monitoring of workflow runs.</p>

<pre><code>java -jar ~/seqware-pipeline-0.12.1-r4898.jar -p net.sourceforge.seqware.pipeline.plugins.WorkflowRunReporter -- -wa 61841
</code></pre>

<p>In this example all the status information for workflows with workflow accession 61841 are printed out to a file in the local file system.  This includes several columns of interest including the status of the workflow, the output file types, and their locations in S3 or the file system. You can use this information to automate the checking of workflows and the retrieval of the results!</p>

<p>In the output from the above command you will see accessions for each workflow run. If the status is ‚Äúfailed‚Äù you can use resources directly on the Web Service to see what went wrong by returning the stderr and stdout from the workflow. This is how you might do that for a workflow_run with an accession of 6774:</p>

<pre><code>GET -C user@user.com:password http://seqwarews3.elasticbeanstalk.com/SeqWareWS/reports/workflowruns/6774/stderr
</code></pre>

<p>Keep in mind two things: </p>

<ol>
  <li>this is a non-standard URL since this feature is in testing</li>
  <li>this direct GET request will be replaced with a command-line tool in the near future.</li>
</ol>

<h2 id="downloading-workflow-results">Downloading Workflow Results</h2>

<p>Once a workflow has finished running you will want to list out the associated files and download the results.  While you can use the Portal for downloading files the best way to get files in bulk is to use our reporting tool. This produces a tab-delimited file that lists all the files produced for the workflows you are interested in.  You can then use the same ProvisionFiles utility above to pull files back.  Since the report produces a simple tab-delimited file you can easily automate the downloading of results by looping over the output files and calling ProvisionFiles using a script.</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.SymLinkFileReporter -- --no-links --output-filename study_report --workflow-accession 13224 --study 20120403_SEQ1
</code></pre>

<p>The output here is a study_report.csv file that contains a line for each file (both those uploaded and those produced by workflows).  You can also filter by file types, for example if you want to see report bundles:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.SymLinkFileReporter -- --no-links --output-filename study_report --workflow-accession 13224 --study 20120403_SEQ1 --file-type application/zip-report-bundle
</code></pre>

<p>Or an example filtering by sample:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.SymLinkFileReporter -- --no-links --output-filename study_report --workflow-accession 13224  --sample 20120403_SEQ1_GAG
</code></pre>

<p>You can use these URLs (such as s3://bucket/samplename/test_R1.fastq.gz) with ProvisionFiles to download results.  Here‚Äôs an example downloading a report bundle:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --module net.sourceforge.seqware.pipeline.modules.utilities.ProvisionFiles --no-metadata -- -i s3://bucket/results/seqware-0.10.0_ComprehensiveExomeGenomeAnalysis-0.10.5/59491657/GAG.fa.variant_quality.gatk.hg19.report.zip -o ./
</code></pre>

<p>Here the zip report bundle is downloaded to the current working directory on the computer you are working on.  In this way you can pull back the results of workflows entirely through scripts that wrap the SymLinkFileReporter and ProvisionFiles.</p>

<p>Also note the SymLinkFileReporter gives you SWIDs for processing events and entities such as studies, samples, and experiments.  You can use this tool to find these SWIDs that are used as ‚Äúparents‚Äù for workflow runs.</p>

<p>In addition to the command line tools, you can also use the Portal to explore the output of workflows triggered through the command line tools.</p>

<p>You can find more information on this report tool on the public SeqWare wiki: <a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=SymLink_Reporter">Study Reporter</a>.</p>

<blockquote>
  <p><strong>NOTE:</strong> in the example above I use &ndash;no-metadata with ProvisionFiles. This is to prevent the tool from writing back an event to the central database. Since you are just downloading a file (versus uploading a file) you do not really want to record that download event in the database.</p>
</blockquote>

<h2 id="listing-your-files-in-s3-c">Listing Your Files in S3 (C)</h2>

<p>Sometimes you may want to just list all the files uploaded (for files that are the result of processing from a workflow you might want to use the reporting tool described above since it will give you more information).  To list your files in a particular bucket:</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --no-metadata --module net.sourceforge.seqware.pipeline.modules.utilities.S3ListFiles -- -u s3://bucket/prefix &gt; file_list.txt
</code></pre>

<p>The result is a file (file_list.txt above) that contains a line per file in the bucket.  Note you can specify just a bucket or a bucket and directory (prefix). The tool searches for any items in S3 that start with that bucket and prefix.</p>

<p>An example output:</p>

<pre><code>LISTING BUCKET: bucketname

* 20120213_SEQ1_R1_001_GAA_AGA.fastq.gz size=243.5K
* 20120213_SEQ1_R1_001_GAA_TAT.fastq.gz size=301.6K
* 20120213_SEQ1_R1_001_GAA_CGC.fastq.gz size=31.4M
...
BUCKET SIZE: 207.6G
</code></pre>

<h2 id="real-seqware-examples">Real SeqWare Examples</h2>

<p>The section below shows real examples using actual data files, upload locations, and samples from SeqWare.  Please be careful with the information below, you do not want to accidently overwrite these files for example.</p>

<h3 id="fastq-upload">Fastq Upload</h3>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --module net.sourceforge.seqware.pipeline.modules.utilities.ProvisionFiles --metadata-output-file-prefix s3://abcco.uploads/cmdlinetest/ --metadata-parent-accession 28766 --metadata-processing-accession-file new_accession.txt -- -im fastq::chemical/seq-na-fastq-gzip::sample.fastq.gz -o s3://abcco.uploads/cmdlinetest/
</code></pre>

<h3 id="associate-an-existing-file-with-sample">Associate an Existing File with Sample</h3>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --module net.sourceforge.seqware.pipeline.modules.GenericMetadataSaver --metadata-parent-accession 28751 -- --gms-output-file fastq::chemical/seq-na-fastq-gzip::s3://abcco.uploads/cmdlinetest/sample.fastq.gz --gms-algorithm UploadTest2 --gms-suppress-output-file-check
</code></pre>

<h3 id="listing-workflows-and-params">Listing Workflows and Params</h3>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.BundleManager -- --list-install

java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.BundleManager -- --list-workflow-params --workflow-accession 27133 &gt; workflow.ini
</code></pre>

<h3 id="launching-workflow">Launching Workflow</h3>
<p>Not going to really do this&hellip;</p>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.WorkflowLauncher -- --ini-files temp.ini --workflow-accession 13224 --schedule --parent-accessions 24656 Listing Workflow Results

java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.SymLinkFileReporter -- --no-links --output-filename study_report --workflow-accession 13224 --study 20120213_SEQ1

java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.SymLinkFileReporter -- --no-links --output-filename study_report --workflow-accession 13224 --study 20120213_SEQ1 --file-type application/zip-report-bundle

java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.SymLinkFileReporter -- --no-links --output-filename study_report --workflow-accession 13224 --study 20120213_SEQ1 --file-type application/zip-report-bundle --sample 20120213_MISEQ1_TCCTGAGC_TAGATCGC
</code></pre>

<h3 id="downloading-workflow-results-1">Downloading Workflow Results</h3>
<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --module net.sourceforge.seqware.pipeline.modules.utilities.ProvisionFiles --no-metadata -- -i s3://seqwareinformatics.analysis/results/seqware-0.10.0_ComprehensiveExomeGenomeAnalysis-0.10.5/69212341/0-1-20120213_SEQ1CGC.fa.alignment.report.zip -o ./
</code></pre>

<h3 id="listing-your-files-in-s3">Listing Your Files in S3</h3>

<pre><code>java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --no-metadata --module net.sourceforge.seqware.pipeline.modules.utilities.S3ListFiles -- -u s3://abcco.uploads &gt; file_list.txt
</code></pre>

<h2 id="to-do">To Do</h2>

<p>Here are the items we are currently working on to improve the command line tools. The goal is to make the command line tools a fully functional replacement for the Portal. This will allow clients to increase the throughput of file upload and workflow triggering through the system since the tools can be easily scripted.</p>

<ul>
  <li>command line tools to list, search, and add Study, Sample, and Experiments without having to use the Portal</li>
  <li>displaying SWID on every entity in the Portal (making it easier to ‚Äúattach‚Äù items such as Fastq files to items you see in the Portal)</li>
  <li>command line tool for listing and monitoring active workflows</li>
  <li>command line tool  for listing the parameters (ini_file field) that were used for a given workflow run (and maybe the full DAX too)</li>
</ul>
;	"!aCommand-Line Tools
====================


About
----------------

This guide will show you how to use command line tools to access the SeqWare metadatabase. This will allow you to do the following tasks using tools that can be scripted versus our Portal web-based interface that requires a user to click on an interface:

* upload data such as fastq files to the cloud and associate that data with particular samples
* find the list of available workflows and the parameters they accept
* schedule a workflow and monitor its progress
* find a list of files produced by a workflow
* download files produced by a workflow

The command line tools are Java wrappers for our RESTful Web Service. If you would like to learn more about the low-level API (perhaps you want to call it directly in a program or script) you can find more information on our old SeqWare wiki page: [SeqWare WebService](https://sourceforge.net/apps/mediawiki/seqware/index.php?title=SeqWare_WebService).

Tools and Requirements
--------------------------------

You will need to download the SeqWare jar file from our continuous build server. Please choose the jar that has the -full suffix, e.g. [seqware-distribution-0.12.5-SNAPSHOT-full.jar](http://jenkins.res.oicr.on.ca/job/seqware/lastStableBuild/net.sourceforge.seqware$seqware-distribution/).

SeqWare is open source architecture built in Java. The jar file contains client code that will allow you to interact with a web service (either on a VM, installed on a cluster or in the cloud) that controls, among other things, workflow execution. You should use this tool on a recent Linux distribution (like RedHat, Ubuntu, or CentOS) using Oracle Java 1.6 or newer.  MacOSX and Windows have not been tested.

Once you download the jar file you will need to setup a configuration file. By default the location is ~/.seqware/settings.

This file contains the web address of the RESTful web service, your username and password, and you Amazon public and private keys that will allow you to push and pull data files to and from the cloud.  Here is an example settings file, please check with the SeqWare Help Desk to ensure your settings are correct, especially the SW_REST_URL since that might change:

	# GENERAL
	SW_METADATA_METHOD=webservice
	# API
	# the base URL for the RESTful SeqWare API
	# this is our production server‚Äôs address
	SW_REST_URL=http://SeqWareWS
	# the username and password to connect to the REST API, this is used by SeqWare Pipeline to write back processing info to the DB
	SW_REST_USER=user@host.com
	SW_REST_PASS=password
	# Amazon Cloud Settings
	# used by tools reading and writing to S3 buckets (dependency
	# data/software bundles, inputs, outputs, etc)
	AWS_ACCESS_KEY=example
	AWS_SECRET_KEY=example

Creating Studies, Experiments, and Samples
----------------------------------------------

You can do this either with the [Portal](http://SeqWarePortal "SeqWare Portal") or via the command line tools below.

You will want to set up your study, experiments, and samples before uploading your fastq or other data files.  This ensures you have ‚Äúparents‚Äù to attach these files to.  Otherwise you will not be able to use them as parameters for workflows. In the following screenshot you see the links that allow you to create these entities through the web application.

There are also command line tools for creating study, experiment, and samples.  The functionality for each of these is fairly limited.  For example, the rich descriptive language for how a read is structured is not yet fully supported and updates to existing entities are not yet possible.  However the basic functionality to create studies, experiments, and samples now exists in a scriptable form.

First, you can find out what tables this tool is capable of writing:

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.Metadata -- --list-tables
	
	TableName
	study
	experiment
	sample

Now, for a given table, you can find out what fields you can write back to and their type:

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.Metadata -- --table study --list-fields
	
	Field    Type    Possible_Values
	title    String
	description    String
	accession    String
	center_name    String
	center_project_name    String
	study_type    Integer    [1: Whole Genome Sequencing, 2: Metagenomics, 3: Transcriptome Analysis, 4: Resequencing, 5: Epigenetics, 6: Synthetic Genomics, 7: Forensic or Paleo-genomics, 8: Gene Regulation Study, 9: Cancer Genomics, 10: Population Genomics, 11: Other]

So using the information above I can create a new study:

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.Metadata -- --table study --create --field 'title::New Test Study' --field 'description::This is a test description' --field 'accession::InternalID123' --field 'center_name::SeqWare' --field 'center_project_name::SeqWare Test Project' --field study_type::4
	
	SWID: 29830

The output of this command above includes the line ‚ÄúSWID: 29830‚Äù.  This is very important since this number is a unique identifier across the database and used to link together entities.  For example, you will use the number produced by the study add command as the parent for the experiment you create below.  If you do not track and supply these numbers then the hierarchy of study/experiment/sample cannot be created.

The next step is to create an experiment and link it to the study you created above. You can find the platform ID using the --list-fields option shown above:

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.Metadata -- --table experiment --create --field 'title::New Test Experiment' --field 'description::This is a test description' --field study_accession::29830 --field platform_id::26
	
	SWID: 29831

Again, you use the SWID from the above output in the next step to create an associated sample. You can find the platform ID using the --list-fields option shown above:

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.Metadata -- --table sample --create --field 'title::New Test Sample' --field 'description::This is a test description' --field experiment_accession::29831 --field organism_id::26
	
	SWID: 29832

At this point you should have a nice study/experiment/sample hierarchy.  You can, of course, add multiple samples per experiment and multiple experiments per study.  For each of the samples you can now upload one or more fastq files.  You will need the SWID from the sample creation above for this step.  Here is a screenshot of what the above commands produce in the Portal:


Uploading Fastq and Associating with a Sample
-------------------------------------------------

The first step in uploading a fastq file(s) and associating with a sample is to identify the sample‚Äôs SWID. The easiest way to do this is to use the Portal web application to navigate through the Study/Experiment/Sample tree to the sample you want to upload fastq for and to note its associated SWID.  You then need to know the destination ‚Äúbucket‚Äù you have been assigned. If you do not know your bucket you can email the SeqWare HelpDesk at [seqware.jira@oicr.on.ca](seqware.jira@oicr.on.ca). Once you have these two pieces of information you can then use the ProvisionFiles utility to push your files into the cloud and associate them with this sample.  Here is an example of calling this utility:

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --module net.sourceforge.seqware.pipeline.modules.utilities.ProvisionFiles --metadata-output-file-prefix s3://bucket/samplename/ --metadata-parent-accession 29832 --metadata-processing-accession-file new_accession.txt -- -im fastq::chemical/seq-na-fastq-gzip::test_R1.fastq.gz -im fastq::chemical/seq-na-fastq-gzip::test_R2.fastq.gz -o s3://bucket/samplename/

> **TIP:** you can find a list of the meta types (like chemical/seq-na-fastq-gzip above) at [Module Conventions - Module MIME Types](http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Module_Conventions#Module_MIME_Types). This is the list we add to as needed when creating new workflows.  It is extremely important to be consistent with these since a workflow will not recognize your input unless the meta type string matches what it expects exactly.

In this example it will upload two fastq files to s3://bucket/samplename and will link them to the sample identified by 29832 (the sample‚Äôs SWID).  Use the portal to find out the SWID for an existing sample or get the SWID using the command line tool when you create a new study. Providing that here will cause the fastq to be associated with that parent sample.


Associating Existing Files with a Sample 
--------------------------------------------------
The best way to get data into the cloud is to use the ProvisionFiles utility above since it both uploads the data (using multiple threads to maximize performance) and also saves the metadata back to the database.  However, sometimes you have already uploaded data to your designated bucket and just want to link the files to particular samples or IUSs in the database.  GenericMetadataSaver is the tool you can use to accomplish this, for example:

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --module net.sourceforge.seqware.pipeline.modules.GenericMetadataSaver --metadata-parent-accession 25192 -- --gms-output-file fastq::chemical/seq-na-fastq-gzip::s3://bucket/sample/Sample/GAA_L001_R1_001.fastq.gz --gms-algorithm UploadLane1 --gms-suppress-output-file-check

Here files are associated with the parent (SWID: 25192 which is an IUS).  These paths already exist in S3.  See List Files in S3 below for how to use a tool to list out your successfully uploaded files.  That tool gives you the s3:// URLs like the ones above.

Listing Available Workflows and Their Parameters
--------------------------------------------------------

Once you have uploaded data the next step is to find the available workflows and their parameters.  To see the list of available workflows you can execute the following command:

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.BundleManager -- --list-install

You will get a tab-delimited list of workflows showing their name, version, and (most importantly) their SWID.  

> **TIP:** it may be easier for you to read the output by cutting and pasting into a spreadsheet.

In this example we are going to use the latest (at the time of this writing) comprehensive exome workflow (13224).  The output of the above command includes the line:

	ComprehensiveExomeGenomeAnalysis    0.10.5    Fri Mar 16 21:26:03 EDT 2012    13224    null/Pipeline_Bundle_ComprehensiveExomeGenomeAnalysis_0.10.5_SeqWare_0.10.0

The fourth column includes the SWID for this workflow that you will use in the next command to find all the parameters (and their defaults) that this workflow takes.  Here is the command, notice I redirect the output to create a basic ini file that can later be customized and used to submit a run of this workflow:

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.BundleManager -- --list-workflow-params --workflow-accession 27133 > workflow.ini

In this example the workflow ‚ÄúComprehensiveExomeGenomeAnalysis‚Äù version 0.10.5 (SWID 13224) parameters are listed.  The output conforms to the input you can use to parameterize and launch workflows.  For example:

	#key=min_freq:type=text:display=T:display_name= Min Allele Frequency
	min_freq=0.2
	#key=novoalign_gap_open_param:type=text:display=T:display_name=Novoalign Gap Open Penalty (-g, default 40)
	novoalign_gap_open_param=40

> **NOTE:** the lines above have been wrapped but you should not include line breaks in your file.  Instead, make sure the file that you create using this tool (and customize for later launching a workflow) includes comment lines starting with ‚Äú#‚Äù and the key=value lines only.  In the command above the redirect to the file workflow.ini will include some extra lines of status output.  Make sure you remove these before continuing to launch the workflow with this ini file.  You can customize any values from the key/value pairs that you need to.  For example, the most frequent parameters you will customize are input files.  In the workflow example above you will want to customize input_fastq_1 and input_fastq_2.  For example, if you wanted to process the files you uploaded you would customize these lines as:

	input_fastq_1=s3://bucket/samplename/test_R1.fastq.gz
	input_fastq_2=s3://bucket/samplename/test_R2.fastq.gz

Since this is a low-level tool you may see many more parameters exposed with this tool than you would using the web Portal application.  Please use caution when customizing these values since some refer to items that affect the underlying infrastructure on EC2. If anything is not clear please consult with the Help Desk (seqware.jira@oicr.on.ca) so we can work with you to prepare your workflow configuration files.

> **TIP:** when you customize key-values in the ini file prepared above you do not need to include key-values that you leave unchanged.  If you do not include these the workflow will run with those values by default anyway.  Removing unchanged key-values will greatly reduce the size of your ini files making it much easier to see the key-values you are interested in.


Triggering a Workflow and Monitoring Progress 
------------------------------------------------------

At this point you know what workflow you are going to run and you have a customized ini file that contains, for example, the input files. The next step is to trigger the workflow using the ini file you prepared.

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.WorkflowLauncher -- --ini-files temp.ini --workflow-accession 13224 --schedule --parent-accessions 24656

> **TIP:** the parent-accessions is the SWID of the ProvisionFiles element that was added under the sample when use used this tool to upload the fastq files in the example above.  You MUST specify this otherwise the workflow‚Äôs results will not be linked to anything (they will be orphaned and will not be visible in the Portal or present in the reports below). Conveniently the ProvisionFiles tool will write these accessions to a file.

This schedules the workflow to run on the cloud. It can take several minutes for a node to finish launching and pick up the workflow to run.  This process can be delayed if the total number of workflows submitted exceeds the maximum simultaneous allowed workflows.  This setting allows us to control the maximum number of cluster nodes launched at any one time. It is entirely configurable, please email the Help Desk (seqware.jira@oicr.on.ca) if you want to increase the maximum number of workflows. Any workflows submitted beyond this max will simply be held in ‚Äúsubmitted‚Äù state until other workflows finish.

Once submitted, you can use the Portal to list the number of submitted, running, and failed workflows.  Log into the Portal and click on the ‚ÄúShow Analysis‚Äù link under the Analysis panel.  You can then click on the tab for ‚ÄúRunning Analysis‚Äù to see what is submitted/running/failed.
A better way of monitoring workflows (and getting a list of the outputs) is to use the WorkflowRunReporter plugin. This will let you script the monitoring of workflow runs.

	java -jar ~/seqware-pipeline-0.12.1-r4898.jar -p net.sourceforge.seqware.pipeline.plugins.WorkflowRunReporter -- -wa 61841

In this example all the status information for workflows with workflow accession 61841 are printed out to a file in the local file system.  This includes several columns of interest including the status of the workflow, the output file types, and their locations in S3 or the file system. You can use this information to automate the checking of workflows and the retrieval of the results!

In the output from the above command you will see accessions for each workflow run. If the status is ‚Äúfailed‚Äù you can use resources directly on the Web Service to see what went wrong by returning the stderr and stdout from the workflow. This is how you might do that for a workflow_run with an accession of 6774:

	GET -C user@user.com:password http://seqwarews3.elasticbeanstalk.com/SeqWareWS/reports/workflowruns/6774/stderr

Keep in mind two things: 

1. this is a non-standard URL since this feature is in testing
1. this direct GET request will be replaced with a command-line tool in the near future.

Downloading Workflow Results
-------------------------------------

Once a workflow has finished running you will want to list out the associated files and download the results.  While you can use the Portal for downloading files the best way to get files in bulk is to use our reporting tool. This produces a tab-delimited file that lists all the files produced for the workflows you are interested in.  You can then use the same ProvisionFiles utility above to pull files back.  Since the report produces a simple tab-delimited file you can easily automate the downloading of results by looping over the output files and calling ProvisionFiles using a script.

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.SymLinkFileReporter -- --no-links --output-filename study_report --workflow-accession 13224 --study 20120403_SEQ1

The output here is a study_report.csv file that contains a line for each file (both those uploaded and those produced by workflows).  You can also filter by file types, for example if you want to see report bundles:

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.SymLinkFileReporter -- --no-links --output-filename study_report --workflow-accession 13224 --study 20120403_SEQ1 --file-type application/zip-report-bundle

Or an example filtering by sample:

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.SymLinkFileReporter -- --no-links --output-filename study_report --workflow-accession 13224  --sample 20120403_SEQ1_GAG

You can use these URLs (such as s3://bucket/samplename/test_R1.fastq.gz) with ProvisionFiles to download results.  Here‚Äôs an example downloading a report bundle:

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --module net.sourceforge.seqware.pipeline.modules.utilities.ProvisionFiles --no-metadata -- -i s3://bucket/results/seqware-0.10.0_ComprehensiveExomeGenomeAnalysis-0.10.5/59491657/GAG.fa.variant_quality.gatk.hg19.report.zip -o ./

Here the zip report bundle is downloaded to the current working directory on the computer you are working on.  In this way you can pull back the results of workflows entirely through scripts that wrap the SymLinkFileReporter and ProvisionFiles.

Also note the SymLinkFileReporter gives you SWIDs for processing events and entities such as studies, samples, and experiments.  You can use this tool to find these SWIDs that are used as ‚Äúparents‚Äù for workflow runs.

In addition to the command line tools, you can also use the Portal to explore the output of workflows triggered through the command line tools.

You can find more information on this report tool on the public SeqWare wiki: [Study Reporter](http://sourceforge.net/apps/mediawiki/seqware/index.php?title=SymLink_Reporter).

> **NOTE:** in the example above I use --no-metadata with ProvisionFiles. This is to prevent the tool from writing back an event to the central database. Since you are just downloading a file (versus uploading a file) you do not really want to record that download event in the database.

Listing Your Files in S3 (C)
-----------------------------

Sometimes you may want to just list all the files uploaded (for files that are the result of processing from a workflow you might want to use the reporting tool described above since it will give you more information).  To list your files in a particular bucket:

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --no-metadata --module net.sourceforge.seqware.pipeline.modules.utilities.S3ListFiles -- -u s3://bucket/prefix > file_list.txt

The result is a file (file_list.txt above) that contains a line per file in the bucket.  Note you can specify just a bucket or a bucket and directory (prefix). The tool searches for any items in S3 that start with that bucket and prefix.

An example output:

	LISTING BUCKET: bucketname
	
	* 20120213_SEQ1_R1_001_GAA_AGA.fastq.gz size=243.5K
	* 20120213_SEQ1_R1_001_GAA_TAT.fastq.gz size=301.6K
	* 20120213_SEQ1_R1_001_GAA_CGC.fastq.gz size=31.4M
	...
	BUCKET SIZE: 207.6G

Real SeqWare Examples
-----------------------

The section below shows real examples using actual data files, upload locations, and samples from SeqWare.  Please be careful with the information below, you do not want to accidently overwrite these files for example.

### Fastq Upload

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --module net.sourceforge.seqware.pipeline.modules.utilities.ProvisionFiles --metadata-output-file-prefix s3://abcco.uploads/cmdlinetest/ --metadata-parent-accession 28766 --metadata-processing-accession-file new_accession.txt -- -im fastq::chemical/seq-na-fastq-gzip::sample.fastq.gz -o s3://abcco.uploads/cmdlinetest/


### Associate an Existing File with Sample

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --module net.sourceforge.seqware.pipeline.modules.GenericMetadataSaver --metadata-parent-accession 28751 -- --gms-output-file fastq::chemical/seq-na-fastq-gzip::s3://abcco.uploads/cmdlinetest/sample.fastq.gz --gms-algorithm UploadTest2 --gms-suppress-output-file-check

### Listing Workflows and Params

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.BundleManager -- --list-install

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.BundleManager -- --list-workflow-params --workflow-accession 27133 > workflow.ini

### Launching Workflow
Not going to really do this...

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.WorkflowLauncher -- --ini-files temp.ini --workflow-accession 13224 --schedule --parent-accessions 24656
Listing Workflow Results

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.SymLinkFileReporter -- --no-links --output-filename study_report --workflow-accession 13224 --study 20120213_SEQ1

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.SymLinkFileReporter -- --no-links --output-filename study_report --workflow-accession 13224 --study 20120213_SEQ1 --file-type application/zip-report-bundle

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.SymLinkFileReporter -- --no-links --output-filename study_report --workflow-accession 13224 --study 20120213_SEQ1 --file-type application/zip-report-bundle --sample 20120213_MISEQ1_TCCTGAGC_TAGATCGC


### Downloading Workflow Results
	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --module net.sourceforge.seqware.pipeline.modules.utilities.ProvisionFiles --no-metadata -- -i s3://seqwareinformatics.analysis/results/seqware-0.10.0_ComprehensiveExomeGenomeAnalysis-0.10.5/69212341/0-1-20120213_SEQ1CGC.fa.alignment.report.zip -o ./

### Listing Your Files in S3

	java -jar seqware-pipeline-0.11.4-r4770.jar -p net.sourceforge.seqware.pipeline.plugins.ModuleRunner -- --no-metadata --module net.sourceforge.seqware.pipeline.modules.utilities.S3ListFiles -- -u s3://abcco.uploads > file_list.txt


To Do
------

Here are the items we are currently working on to improve the command line tools. The goal is to make the command line tools a fully functional replacement for the Portal. This will allow clients to increase the throughput of file upload and workflow triggering through the system since the tools can be easily scripted.

* command line tools to list, search, and add Study, Sample, and Experiments without having to use the Portal
* displaying SWID on every entity in the Portal (making it easier to ‚Äúattach‚Äù items such as Fastq files to items you see in the Portal)
* command line tool for listing and monitoring active workflows
* command line tool  for listing the parameters (ini_file field) that were used for a given workflow run (and maybe the full DAX too);
@"/pictures/Use/{;{ "/source/{;{	;"Õ<!DOCTYPE HTML>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>SeqWare - Developers Guide</title>
    <link rel="stylesheet" type="text/css" href="/style.css" media="screen">
    <meta name="generator" content="nanoc 3.3.6">
  </head>
  <body>
    <div id="homepic">
      <a href="/"><img src="/pictures/seqware_logo.png"/></a>
    </div>
    <div id="main">
     <h1 id="developers-guide">Developers Guide</h1>

<p>SeqWare is a Java-based, open-source project using Java 1.6+, Hibernate, Spring, PostgreSQL, Hadoop, Map/Reduce and a variety of other technologies.</p>

<h2 id="developing-for-seqware">Developing for SeqWare</h2>
<p>Please see the plethora of documentation at our <a href="http://seqware.sf.net">old wiki</a> and feel free to contact the mailing list with any problems you may have.</p>

<h2 id="downloads">Downloads</h2>
<p>Please see the <a href="/downloads/">Downloads</a> page for access to source code, SeqWare virtual machines and AMIs.</p>

    </div>
    <div id="sidebar">
    <ul>
	<li><a href="/about/"><span>About SeqWare</span></a></li>
	<li><a href="/download/"><span>Download</span></a></li>
     </ul>
     <h2><span>Quick Reference</span></h2>
      <ul>
	<li><a href="/users/"><span>User Guide</span></a></li>
	<li><a href="/administrators/"><span>Administrator Guide</span></a></li>
	<li><a href="/source/"><span>Developers Guide</span></a></li>
        <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Main_Page"><span>Old Wiki</span></a></li>
    </ul>
    <h2><span>APIs</span></h2>
    <ul>
	<li><a href="/webservice-api/"><span>Web Service API</span></a></li>
 	<li><a href="/queryengine-api/"><span>Query Engine API</span></a></li>
    </ul>
      <h2><span>Contact</span></h2>
      <ul>
	<li><a href="http://sourceforge.net/mail/?group_id=239239"><span>Mailing Lists</span></a></li>
	<li><a href="mailto:seqware.jira@oicr.on.ca"><span>JIRA Bug Tracker</span></a></li>
      </ul>
    </div>
  </body>
</html>
;"X<h1 id="developers-guide">Developers Guide</h1>

<p>SeqWare is a Java-based, open-source project using Java 1.6+, Hibernate, Spring, PostgreSQL, Hadoop, Map/Reduce and a variety of other technologies.</p>

<h2 id="developing-for-seqware">Developing for SeqWare</h2>
<p>Please see the plethora of documentation at our <a href="http://seqware.sf.net">old wiki</a> and feel free to contact the mailing list with any problems you may have.</p>

<h2 id="downloads">Downloads</h2>
<p>Please see the <a href="/downloads/">Downloads</a> page for access to source code, SeqWare virtual machines and AMIs.</p>
;	"Developers Guide
================

SeqWare is a Java-based, open-source project using Java 1.6+, Hibernate, Spring, PostgreSQL, Hadoop, Map/Reduce and a variety of other technologies.

Developing for SeqWare
----------------------
Please see the plethora of documentation at our [old wiki](http://seqware.sf.net) and feel free to contact the mailing list with any problems you may have.

Downloads
--------------------
Please see the [Downloads](/downloads/) page for access to source code, SeqWare virtual machines and AMIs.;
@("/users/{;{	;"<!DOCTYPE HTML>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>SeqWare - Users</title>
    <link rel="stylesheet" type="text/css" href="/style.css" media="screen">
    <meta name="generator" content="nanoc 3.3.6">
  </head>
  <body>
    <div id="homepic">
      <a href="/"><img src="/pictures/seqware_logo.png"/></a>
    </div>
    <div id="main">
     <h1 id="user-guide">User Guide</h1>

<p>SeqWare is an open-source bioinformatics workflow deployment and management system. Its core features include:</p>

<ul>
  <li>A centralized metadata database that tracks samples, annotations and analyses, and a web application to visualize it</li>
  <li>A module specification and execution engine that lets you package computational tools and use them to build and run complex analytical workflows</li>
  <li>Support for running workflows irrespective of the underlying cluster environment</li>
  <li>An advanced query engine that allows you to store and search variants, coverage, and annotations produced in your workflows using either a simple or distributed database backend </li>
</ul>

<h2 id="this-guide">This Guide</h2>

<p>The major point of this guide is to describe how, as a user, you would log into a pre-configured SeqWare server and start launching workflows. It is focused on running existing workflows and creating new workflows using the SeqWare Pipeline API.</p>

<p>This guide assumes your starting with SeqWare, and its various components, already installed. It assumes that you or your admin have already setup and tested SeqWare. This guide picks up where the installation guide leaves off and walks you through the process of launching SeqWare workflows for the first time.</p>

<h2 id="download-the-project">Download the Project</h2>

<p>Every user using SeqWare Pipeline and other tools in the SeqWare project will need to download the code into your home directory using Subversion. Instructions are available on the SeqWare SourceForge page.</p>

<h2 id="manuals">Manuals</h2>
<ul>
  <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=How_to_Write_a_Bundled_Workflow">Writing Workflows</a> : A series of analysis tools and modules chained together to produce a particular result</li>
  <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Developing_New_SeqWare_Pipeline_Modules">Writing Modules</a> : Java wrappers around tools for use in a workflow</li>
  <li><a href="/manuals/command_line_tools/">Command-Line Tools</a> : Tools to create samples, experiments and studies on the command line, upload data, launch workflows, and more.</li>
  <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Module_Conventions">SeqWare Conventions</a>: File MIME-types, Error codes</li>
</ul>

<h2 id="reference">Reference</h2>
<ul>
  <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Available_Modules">Generic Pipeline Modules</a> : Generic Modules for your workflows</li>
</ul>

<h3 id="reporting-tools">Reporting Tools</h3>
<ul>
  <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=SymLink_Reporter">Study Reporter</a> : Create a nested tree structure of all of the output files from a particular sample, or all of the samples in a study</li>
  <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Sequencer_Run_Reporter">Sequencer Run Reporter</a>: Gives you a view of all the sequencer runs/lanes/barcodes and the associated analysis processing events.</li>
  <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Workflow_Run_Reporter">Workflow Run Reporter</a>: Find the identity and library samples and input and output files from one or more workflow runs. </li>
</ul>

<h3 id="import-tools">Import Tools</h3>
<ul>
  <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=FileLinker">FileLinker</a> : Import files into the MetaDB and link them with IUS&rsquo;s or lanes. </li>
</ul>

<h3 id="metadata-tools">Metadata Tools</h3>
<ul>
  <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=AttributeAnnotator">AttributeAnnotator</a> : Annotate items in the MetaDB with &lsquo;skip&rsquo; or key-value pairs. </li>
</ul>

<h2 id="cite-seqware">Cite SeqWare</h2>

<p>O&rsquo;Connor, B. D., B. Merriman, and S. F. Nelson. SeqWare Query Engine: storing and searching sequence data in the cloud. BMC Bioinformatics 2010, 11(Suppl 12):S2
Support</p>

<p>The best way to get help with SeqWare is to send email the seqware-users mailing list at seqware-users@lists.sourceforge.net. Subscribe here.</p>

    </div>
    <div id="sidebar">
    <ul>
	<li><a href="/about/"><span>About SeqWare</span></a></li>
	<li><a href="/download/"><span>Download</span></a></li>
     </ul>
     <h2><span>Quick Reference</span></h2>
      <ul>
	<li><a href="/users/"><span>User Guide</span></a></li>
	<li><a href="/administrators/"><span>Administrator Guide</span></a></li>
	<li><a href="/source/"><span>Developers Guide</span></a></li>
        <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Main_Page"><span>Old Wiki</span></a></li>
    </ul>
    <h2><span>APIs</span></h2>
    <ul>
	<li><a href="/webservice-api/"><span>Web Service API</span></a></li>
 	<li><a href="/queryengine-api/"><span>Query Engine API</span></a></li>
    </ul>
      <h2><span>Contact</span></h2>
      <ul>
	<li><a href="http://sourceforge.net/mail/?group_id=239239"><span>Mailing Lists</span></a></li>
	<li><a href="mailto:seqware.jira@oicr.on.ca"><span>JIRA Bug Tracker</span></a></li>
      </ul>
    </div>
  </body>
</html>
;"ß<h1 id="user-guide">User Guide</h1>

<p>SeqWare is an open-source bioinformatics workflow deployment and management system. Its core features include:</p>

<ul>
  <li>A centralized metadata database that tracks samples, annotations and analyses, and a web application to visualize it</li>
  <li>A module specification and execution engine that lets you package computational tools and use them to build and run complex analytical workflows</li>
  <li>Support for running workflows irrespective of the underlying cluster environment</li>
  <li>An advanced query engine that allows you to store and search variants, coverage, and annotations produced in your workflows using either a simple or distributed database backend </li>
</ul>

<h2 id="this-guide">This Guide</h2>

<p>The major point of this guide is to describe how, as a user, you would log into a pre-configured SeqWare server and start launching workflows. It is focused on running existing workflows and creating new workflows using the SeqWare Pipeline API.</p>

<p>This guide assumes your starting with SeqWare, and its various components, already installed. It assumes that you or your admin have already setup and tested SeqWare. This guide picks up where the installation guide leaves off and walks you through the process of launching SeqWare workflows for the first time.</p>

<h2 id="download-the-project">Download the Project</h2>

<p>Every user using SeqWare Pipeline and other tools in the SeqWare project will need to download the code into your home directory using Subversion. Instructions are available on the SeqWare SourceForge page.</p>

<h2 id="manuals">Manuals</h2>
<ul>
  <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=How_to_Write_a_Bundled_Workflow">Writing Workflows</a> : A series of analysis tools and modules chained together to produce a particular result</li>
  <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Developing_New_SeqWare_Pipeline_Modules">Writing Modules</a> : Java wrappers around tools for use in a workflow</li>
  <li><a href="/manuals/command_line_tools/">Command-Line Tools</a> : Tools to create samples, experiments and studies on the command line, upload data, launch workflows, and more.</li>
  <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Module_Conventions">SeqWare Conventions</a>: File MIME-types, Error codes</li>
</ul>

<h2 id="reference">Reference</h2>
<ul>
  <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Available_Modules">Generic Pipeline Modules</a> : Generic Modules for your workflows</li>
</ul>

<h3 id="reporting-tools">Reporting Tools</h3>
<ul>
  <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=SymLink_Reporter">Study Reporter</a> : Create a nested tree structure of all of the output files from a particular sample, or all of the samples in a study</li>
  <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Sequencer_Run_Reporter">Sequencer Run Reporter</a>: Gives you a view of all the sequencer runs/lanes/barcodes and the associated analysis processing events.</li>
  <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Workflow_Run_Reporter">Workflow Run Reporter</a>: Find the identity and library samples and input and output files from one or more workflow runs. </li>
</ul>

<h3 id="import-tools">Import Tools</h3>
<ul>
  <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=FileLinker">FileLinker</a> : Import files into the MetaDB and link them with IUS&rsquo;s or lanes. </li>
</ul>

<h3 id="metadata-tools">Metadata Tools</h3>
<ul>
  <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=AttributeAnnotator">AttributeAnnotator</a> : Annotate items in the MetaDB with &lsquo;skip&rsquo; or key-value pairs. </li>
</ul>

<h2 id="cite-seqware">Cite SeqWare</h2>

<p>O&rsquo;Connor, B. D., B. Merriman, and S. F. Nelson. SeqWare Query Engine: storing and searching sequence data in the cloud. BMC Bioinformatics 2010, 11(Suppl 12):S2
Support</p>

<p>The best way to get help with SeqWare is to send email the seqware-users mailing list at seqware-users@lists.sourceforge.net. Subscribe here.</p>
;	"πUser Guide
============

SeqWare is an open-source bioinformatics workflow deployment and management system. Its core features include:

* A centralized metadata database that tracks samples, annotations and analyses, and a web application to visualize it
* A module specification and execution engine that lets you package computational tools and use them to build and run complex analytical workflows
* Support for running workflows irrespective of the underlying cluster environment
* An advanced query engine that allows you to store and search variants, coverage, and annotations produced in your workflows using either a simple or distributed database backend 

This Guide
---------

The major point of this guide is to describe how, as a user, you would log into a pre-configured SeqWare server and start launching workflows. It is focused on running existing workflows and creating new workflows using the SeqWare Pipeline API.

This guide assumes your starting with SeqWare, and its various components, already installed. It assumes that you or your admin have already setup and tested SeqWare. This guide picks up where the installation guide leaves off and walks you through the process of launching SeqWare workflows for the first time.


Download the Project
---------------------

Every user using SeqWare Pipeline and other tools in the SeqWare project will need to download the code into your home directory using Subversion. Instructions are available on the SeqWare SourceForge page.

Manuals
-----------------
* [Writing Workflows](http://sourceforge.net/apps/mediawiki/seqware/index.php?title=How_to_Write_a_Bundled_Workflow) : A series of analysis tools and modules chained together to produce a particular result
* [Writing Modules](http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Developing_New_SeqWare_Pipeline_Modules) : Java wrappers around tools for use in a workflow
* [Command-Line Tools](/manuals/command_line_tools/) : Tools to create samples, experiments and studies on the command line, upload data, launch workflows, and more.
* [SeqWare Conventions](http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Module_Conventions): File MIME-types, Error codes

Reference
----------------
* [Generic Pipeline Modules](http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Available_Modules) : Generic Modules for your workflows

### Reporting Tools
* [Study Reporter](http://sourceforge.net/apps/mediawiki/seqware/index.php?title=SymLink_Reporter) : Create a nested tree structure of all of the output files from a particular sample, or all of the samples in a study
* [Sequencer Run Reporter](http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Sequencer_Run_Reporter): Gives you a view of all the sequencer runs/lanes/barcodes and the associated analysis processing events.
* [Workflow Run Reporter](http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Workflow_Run_Reporter): Find the identity and library samples and input and output files from one or more workflow runs. 

### Import Tools
* [FileLinker](http://sourceforge.net/apps/mediawiki/seqware/index.php?title=FileLinker) : Import files into the MetaDB and link them with IUS's or lanes. 

### Metadata Tools
* [AttributeAnnotator](http://sourceforge.net/apps/mediawiki/seqware/index.php?title=AttributeAnnotator) : Annotate items in the MetaDB with 'skip' or key-value pairs. 


Cite SeqWare
------------------------

O'Connor, B. D., B. Merriman, and S. F. Nelson. SeqWare Query Engine: storing and searching sequence data in the cloud. BMC Bioinformatics 2010, 11(Suppl 12):S2
Support

The best way to get help with SeqWare is to send email the seqware-users mailing list at seqware-users@lists.sourceforge.net. Subscribe here.;
@."/stylesheet/{;{;"O
* {
  margin: 0;
  padding: 0;

  font-family: Georgia, Palatino, Times, 'Times New Roman', sans-serif;
}

body {
  color: #1F2120;
  background: #fff;
  font-size: 14px;
  line-height: 20px;
}

a {
  text-decoration: none;
}

a:link,
a:visited {
  color: #00519D;
}

a:hover {
  color: #003366;
}

#main {
  position: absolute;

  top: 40px;
  left: 280px;
  right: 60px;
  /*width: 700px;*/
}

#main h1 {
  font-size: 18px;
  font-weight: normal;
  color: #003366;

}

#main h2 {
  font-size: 16px;
  font-weight: normal;
  color: #003366;
  line-height: 40px;
  margin-top:10px;
  margin-bottom:-15px;
}


#main h3 {
  font-size: 14px;
  font-weight: strong;
  color: #003366;
  margin-top:10px;
}

#main p {
  margin: 10px 0;
  
}

#main ul, #main ol {
  margin: 20px;
}

#main li {
  /*font-size: 15px;
  
  line-height: 20px;*/
}

#main ul li {
  list-style-type: square;
}

#main table {
  margin-top:50px;
  margin-bottom:50px;
  border: 0;
  margin-left:auto; 
  margin-right:auto;
  text-align:center;
  font-size: 13px;

}

#main table th {
  text-transform: uppercase;
  color: #003366;
}

#homepic {
  
  margin:20px;

}


#sidebar {
  position: absolute;

  top: 40px;
  left: 20px;
  width: 200px;

  padding: 20px 20px 0 0;

  border-right: 1px solid #687331;

  text-align: right;
}

#sidebar h2 {
  text-transform: uppercase;

  font-size: 13px;

  color: #333;

  letter-spacing: 1px;

  line-height: 20px;

 -moz-border-radius:  1em 0em 0em 4em;
  border-radius:  1em 0em 0em 4em;
  border:1px solid #687331;

}

#sidebar ul {
  list-style-type: none;

/*  margin: 20px 0;*/
}

#sidebar li {
  font-size: 14px;
  line-height: 24px;
  background: #CEE3F6;
  color: #C6C5C3;
  -moz-border-radius:  1em 0em 0em 4em;
  border-radius:  1em 0em 0em 4em;
  margin:2px;
}

#sidebar li:hover {
  background: #A5C6E5;
}


#sidebar li a {
  color: #1F2120;
}

/*#sidebar li a:hover {
  background: #656766;
}*/

span {
  padding:5px;
}

blockquote {
  padding: 0px 10px 0px 10px;
  margin-left:20px;
/*  position:relative;*/
  background:#CEE3F6;
  -moz-border-radius:  5px;
  border-radius:  5px;
}

pre {
  font-family: monospace;
  font-size: 12px;
  border: 1px solid gray;
  padding: 10px;
  background: #FAFAFA;


  white-space: pre;           /* CSS 2.0 */
  white-space: pre-wrap;      /* CSS 2.1 */
  white-space: pre-line;      /* CSS 3.0 */
  white-space: -pre-wrap;     /* Opera 4-6 */
  white-space: -o-pre-wrap;   /* Opera 7 */
  white-space: -moz-pre-wrap; /* Mozilla */
  white-space: -hp-pre-wrap;  /* HP Printers */
  word-wrap: break-word;      /* IE 5+ */ 
}

code {
  font-family: monospace;
  width: 100%;
}
;	@4;
@4"/{;{	;"W<!DOCTYPE HTML>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>SeqWare - Home</title>
    <link rel="stylesheet" type="text/css" href="/style.css" media="screen">
    <meta name="generator" content="nanoc 3.3.6">
  </head>
  <body>
    <div id="homepic">
      <a href="/"><img src="/pictures/seqware_logo.png"/></a>
    </div>
    <div id="main">
     <h1>Next-Generation Sequencing Analysis on the Grid and in the Cloud</h1>

<p>The open source SeqWare project is a portable software infrastructure designed to analyze massive genomics datasets produced by contemporary and emerging technologies, in particular Next Generation Sequencing (NGS) platforms.  It consists of a comprehensive suite of tools focused on enabling the end-to-end analysis of sequence data -- from from raw base calling to analyzed variants ready for interpretation by users.</p>

<table>
<tr>
<th><a href="/users/">Users</a></th>
<th><a href="/administrators/">Administrators</a></th>
<th><a href="/source/">Developers</a></th>
</tr>
<tr>
<td><a href="/users/"><img src="pictures/Use.png" /></a></td>
<td><a href="/administrators/"><img src="pictures/Deploy.png" /></a></td>
<td><a href="/source/"><img src="pictures/Develop.png" /></a></td>
</tr>
<tr>
<td width="200">Create and run workflows either using a web application or command line interface</td>
<td width="200">Deploy SeqWare on a virtual machine, in the Cloud, or on your own cluster</td>
<td width="200">Contribute to SeqWare by getting involved with core development</td>
</tr>
</table>

<p>SeqWare is currently used by a variety of NGS users including the <a href="http://unclineberger.org/">Lineberger Comprehensive Cancer Center at UNC</a>, at the <a href="http://oicr.on.ca/">Ontario Institute for Cancer Research in Toronto</a> and by our commercial partner <a href="http://nimbusinformatics.com/">Nimbus Informatics.</a></p>

    </div>
    <div id="sidebar">
    <ul>
	<li><a href="/about/"><span>About SeqWare</span></a></li>
	<li><a href="/download/"><span>Download</span></a></li>
     </ul>
     <h2><span>Quick Reference</span></h2>
      <ul>
	<li><a href="/users/"><span>User Guide</span></a></li>
	<li><a href="/administrators/"><span>Administrator Guide</span></a></li>
	<li><a href="/source/"><span>Developers Guide</span></a></li>
        <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Main_Page"><span>Old Wiki</span></a></li>
    </ul>
    <h2><span>APIs</span></h2>
    <ul>
	<li><a href="/webservice-api/"><span>Web Service API</span></a></li>
 	<li><a href="/queryengine-api/"><span>Query Engine API</span></a></li>
    </ul>
      <h2><span>Contact</span></h2>
      <ul>
	<li><a href="http://sourceforge.net/mail/?group_id=239239"><span>Mailing Lists</span></a></li>
	<li><a href="mailto:seqware.jira@oicr.on.ca"><span>JIRA Bug Tracker</span></a></li>
      </ul>
    </div>
  </body>
</html>
;"Ó<h1>Next-Generation Sequencing Analysis on the Grid and in the Cloud</h1>

<p>The open source SeqWare project is a portable software infrastructure designed to analyze massive genomics datasets produced by contemporary and emerging technologies, in particular Next Generation Sequencing (NGS) platforms.  It consists of a comprehensive suite of tools focused on enabling the end-to-end analysis of sequence data -- from from raw base calling to analyzed variants ready for interpretation by users.</p>

<table>
<tr>
<th><a href="/users/">Users</a></th>
<th><a href="/administrators/">Administrators</a></th>
<th><a href="/source/">Developers</a></th>
</tr>
<tr>
<td><a href="/users/"><img src="pictures/Use.png" /></a></td>
<td><a href="/administrators/"><img src="pictures/Deploy.png" /></a></td>
<td><a href="/source/"><img src="pictures/Develop.png" /></a></td>
</tr>
<tr>
<td width="200">Create and run workflows either using a web application or command line interface</td>
<td width="200">Deploy SeqWare on a virtual machine, in the Cloud, or on your own cluster</td>
<td width="200">Contribute to SeqWare by getting involved with core development</td>
</tr>
</table>

<p>SeqWare is currently used by a variety of NGS users including the <a href="http://unclineberger.org/">Lineberger Comprehensive Cancer Center at UNC</a>, at the <a href="http://oicr.on.ca/">Ontario Institute for Cancer Research in Toronto</a> and by our commercial partner <a href="http://nimbusinformatics.com/">Nimbus Informatics.</a></p>
;	"Ï<h1>Next-Generation Sequencing Analysis on the Grid and in the Cloud</h1>

<p>The open source SeqWare project is a portable software infrastructure designed to analyze massive genomics datasets produced by contemporary and emerging technologies, in particular Next Generation Sequencing (NGS) platforms.  It consists of a comprehensive suite of tools focused on enabling the end-to-end analysis of sequence data -- from from raw base calling to analyzed variants ready for interpretation by users.</p>


<table>
<tr>
<th><a href="/users/">Users</a></th>
<th><a href="/administrators/">Administrators</a></th>
<th><a href="/source/">Developers</a></th>
</tr>
<tr>
<td><a href="/users/"><img src="pictures/Use.png"/></a></td>
<td><a href="/administrators/"><img src="pictures/Deploy.png"/></a></td>
<td><a href="/source/"><img src="pictures/Develop.png"/></a></td>
</tr>
<tr>
<td width="200">Create and run workflows either using a web application or command line interface</td>
<td width="200">Deploy SeqWare on a virtual machine, in the Cloud, or on your own cluster</td>
<td width="200">Contribute to SeqWare by getting involved with core development</td>
</tr>
</table>


<p>SeqWare is currently used by a variety of NGS users including the <a href="http://unclineberger.org/">Lineberger Comprehensive Cancer Center at UNC</a>, at the <a href="http://oicr.on.ca/">Ontario Institute for Cancer Research in Toronto</a> and by our commercial partner <a href="http://nimbusinformatics.com/">Nimbus Informatics.</a></p>;
@8"/administrators/{;{	;"‰<!DOCTYPE HTML>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>SeqWare - </title>
    <link rel="stylesheet" type="text/css" href="/style.css" media="screen">
    <meta name="generator" content="nanoc 3.3.6">
  </head>
  <body>
    <div id="homepic">
      <a href="/"><img src="/pictures/seqware_logo.png"/></a>
    </div>
    <div id="main">
     <p><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Creating_a_SeqWare_VM">Creating a SeqWare VM</a></p>

    </div>
    <div id="sidebar">
    <ul>
	<li><a href="/about/"><span>About SeqWare</span></a></li>
	<li><a href="/download/"><span>Download</span></a></li>
     </ul>
     <h2><span>Quick Reference</span></h2>
      <ul>
	<li><a href="/users/"><span>User Guide</span></a></li>
	<li><a href="/administrators/"><span>Administrator Guide</span></a></li>
	<li><a href="/source/"><span>Developers Guide</span></a></li>
        <li><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Main_Page"><span>Old Wiki</span></a></li>
    </ul>
    <h2><span>APIs</span></h2>
    <ul>
	<li><a href="/webservice-api/"><span>Web Service API</span></a></li>
 	<li><a href="/queryengine-api/"><span>Query Engine API</span></a></li>
    </ul>
      <h2><span>Contact</span></h2>
      <ul>
	<li><a href="http://sourceforge.net/mail/?group_id=239239"><span>Mailing Lists</span></a></li>
	<li><a href="mailto:seqware.jira@oicr.on.ca"><span>JIRA Bug Tracker</span></a></li>
      </ul>
    </div>
  </body>
</html>
;"<p><a href="http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Creating_a_SeqWare_VM">Creating a SeqWare VM</a></p>
;	"q[Creating a SeqWare VM](http://sourceforge.net/apps/mediawiki/seqware/index.php?title=Creating_a_SeqWare_VM);
@>"/pictures/Deploy/{;{ "/pictures/seqware_logo/{;{ :versioni